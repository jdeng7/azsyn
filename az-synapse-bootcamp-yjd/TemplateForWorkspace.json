{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "az-synapse-bootcamp-yjd"
		},
		"az-synapse-bootcamp-yjd-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'az-synapse-bootcamp-yjd-WorkspaceDefaultSqlServer'"
		},
		"az_adls_azstoragepwyjd_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'az_adls_azstoragepwyjd'"
		},
		"az_sql_AdventureWorksDW_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'az_sql_AdventureWorksDW'"
		},
		"az_sql_AdventureWorksLT_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'az_sql_AdventureWorksLT'"
		},
		"az-synapse-bootcamp-yjd-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azstoragepwyjd.dfs.core.windows.net"
		},
		"az_adls_azstoragepwyjd_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azstoragepwyjd.dfs.core.windows.net/"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/Lab04A_LoadInternetSales')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "az_sql_AdventureWorksDW_InternetSales",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "az_sql_AdventureWorksLT_InternetSales",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Initial Loads"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-08T02:39:58Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/az_sql_AdventureWorksDW_InternetSales')]",
				"[concat(variables('workspaceId'), '/datasets/az_sql_AdventureWorksLT_InternetSales')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab04B_LoadProducts')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "CreateProductList",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "az_sql_AdventureWorksLT_Products",
								"type": "DatasetReference",
								"parameters": {
									"schema": {
										"value": "@pipeline().parameters.schema",
										"type": "Expression"
									},
									"tablename": {
										"value": "@pipeline().parameters.tablename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "az_adls_azstoragepwyjd_ProductList",
								"type": "DatasetReference",
								"parameters": {
									"directory": {
										"value": "@pipeline().parameters.tablename",
										"type": "Expression"
									},
									"filename": {
										"value": "@pipeline().parameters.tablename",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"schema": {
						"type": "string",
						"defaultValue": "ph"
					},
					"tablename": {
						"type": "string",
						"defaultValue": "ph"
					}
				},
				"folder": {
					"name": "ClassLabs"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-09T04:22:45Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/az_sql_AdventureWorksLT_Products')]",
				"[concat(variables('workspaceId'), '/datasets/az_adls_azstoragepwyjd_ProductList')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab05C_LoadInternetSales')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "az-synapse-bootcamp-yjd-WorkspaceDefaultStorage",
									"type": "LinkedServiceReference"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "az_sql_AdventureWorksDW_InternetSales",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "az_sqlpool_InternetSales",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ClassLabs"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-08T03:13:18Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/az_sql_AdventureWorksDW_InternetSales')]",
				"[concat(variables('workspaceId'), '/datasets/az_sqlpool_InternetSales')]",
				"[concat(variables('workspaceId'), '/linkedServices/az-synapse-bootcamp-yjd-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab06A_MetadataActivity')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "az_adls_azstoragepwyjd_Products",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"itemName",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[dbo].[usp_InsertLastModifiedDate]",
							"storedProcedureParameters": {
								"FileName": {
									"value": {
										"value": "@activity('Get Metadata1').output.itemName",
										"type": "Expression"
									},
									"type": "String"
								},
								"ModifiedDate": {
									"value": {
										"value": "@activity('Get Metadata1').output.lastModified",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RecordInsertDate": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "az_sql_AdventureWorksLT",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ClassLabs"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-09T12:51:56Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/az_adls_azstoragepwyjd_Products')]",
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_AdventureWorksLT')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab06C_LoadTaskQueue')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "az_adls_azstoragepwyjd_InternetSales",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[dbo].[usp_InsertFileNames]",
										"storedProcedureParameters": {
											"DateInserted": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"filename": {
												"value": {
													"value": "@item().name",
													"type": "Expression"
												},
												"type": "String"
											},
											"Status": {
												"value": "0",
												"type": "Int32"
											},
											"TotalRows": {
												"value": null,
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "az_sql_AdventureWorksLT",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ClassLabs"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-09T12:52:19Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/az_adls_azstoragepwyjd_InternetSales')]",
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_AdventureWorksLT')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab06D_CheckFileExist')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('fileexists')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Metadata1",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "az_adls_azstoragepwyjd_SalesNew",
											"type": "DatasetReference",
											"parameters": {}
										},
										"fieldList": [
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get Metadata1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileexists",
										"value": {
											"value": "@activity('Get Metadata1').output.exists",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 3
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"fileexists": {
						"type": "Boolean",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "ClassLabs"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-09T14:42:43Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/az_adls_azstoragepwyjd_SalesNew')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab06E_FilterMetadataActivity')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "az_adls_azstoragepwyjd_Employees",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"exists",
								"itemName",
								"lastModified",
								"itemType"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'inputEmp')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[dbo].[usp_InsertFileInformation]",
										"storedProcedureParameters": {
											"FileName": {
												"value": {
													"value": "@item().name",
													"type": "Expression"
												},
												"type": "String"
											},
											"ModifiedDate": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"RecordInsertDate": {
												"value": {
													"value": "@convertFromUtc(utcnow(),'Eastern Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "az_sql_AdventureWorksLT",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ClassLabs"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-09T14:42:49Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/az_adls_azstoragepwyjd_Employees')]",
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_AdventureWorksLT')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab06F_Lookup_IfCondition')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get Last Modified Date",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "az_adls_azstoragepwyjd_InputEmp",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Get Last Execution Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[dbo].[usp_LastLoadDate]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "az_sql_AdventureWorksLT_Products",
								"type": "DatasetReference",
								"parameters": {
									"schema": "ph",
									"tablename": "ph"
								}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Last Modified Date",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get Last Execution Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(\nactivity('Get Last Modified Date').output.lastModified,\nactivity('Get Last Execution Date').output.firstRow.ExecutionDate\n)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait_False",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Wait_True",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ClassLabs"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-09T15:48:11Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/az_adls_azstoragepwyjd_InputEmp')]",
				"[concat(variables('workspaceId'), '/datasets/az_sql_AdventureWorksLT_Products')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab07A_WorkerPipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "az_sql_AdventureWorksDW_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"schema": {
										"value": "@pipeline().parameters.schema",
										"type": "Expression"
									},
									"tablename": {
										"value": "@pipeline().parameters.tablename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "az_adls_azstoragepwyjd_dynamic",
								"type": "DatasetReference",
								"parameters": {
									"directory": {
										"value": "@toLower(pipeline().parameters.tablename)",
										"type": "Expression"
									},
									"filename": {
										"value": "@concat(\n\npipeline().parameters.tablename,\n\n'List_',\n\nsubstring( convertFromUtc( utcNow(),'Eastern Standard Time'),0,10)\n\n)",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"schema": {
						"type": "string"
					},
					"tablename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ClassLabs"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-09T16:33:06Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/az_sql_AdventureWorksDW_Dynamic')]",
				"[concat(variables('workspaceId'), '/datasets/az_adls_azstoragepwyjd_dynamic')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab07B_ParentPipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "\nSELECT \n\tTABLE_SCHEMA as TableSchema,\n\tTABLE_NAME as TableName\nFROM INFORMATION_SCHEMA.TABLES\nWHERE\n\tTABLE_NAME IN (\n\t\t'DimProduct',\n\t\t'DimProductCategory',\n\t\t'DimCustomer',\n\t\t'DimPromotion',\n\t\t'DimEmployee',\n\t\t'DimReseller',\n\t\t'DimSalesReason',\n\t\t'DimOrganization')",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "az_sql_AdventureWorksDW_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"schema": "ph",
									"tablename": "ph"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Lab07A_WorkerPipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"schema": {
												"value": "@item().TableSchema",
												"type": "Expression"
											},
											"tablename": {
												"value": "@item().TableName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ClassLabs"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-09T22:55:43Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/az_sql_AdventureWorksDW_Dynamic')]",
				"[concat(variables('workspaceId'), '/pipelines/Lab07A_WorkerPipeline')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab09B_DataFlowTransformation')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "DataFlowTransformation",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SalesByProductYJD",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"InternetSales": {},
									"LoadSalesByProduct": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "az-synapse-bootcamp-yjd-WorkspaceDefaultStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "adfstagedpolybasetempdata"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ClassLabs"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-10T12:25:51Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/SalesByProductYJD')]",
				"[concat(variables('workspaceId'), '/linkedServices/az-synapse-bootcamp-yjd-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_adls_azstoragepwyjd_Employees')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_adls_azstoragepwyjd",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "training_data/Employees",
						"fileSystem": "training"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_adls_azstoragepwyjd')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_adls_azstoragepwyjd_InputEmp')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_adls_azstoragepwyjd",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "inputEmp.txt",
						"folderPath": "training_data/Employees",
						"fileSystem": "training"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "\"FirstName\"|\"LastName\"",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_adls_azstoragepwyjd')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_adls_azstoragepwyjd_InternetSales')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_adls_azstoragepwyjd",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "training_data/FactInternetSales",
						"fileSystem": "training"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_adls_azstoragepwyjd')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_adls_azstoragepwyjd_ProductList')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_adls_azstoragepwyjd",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"directory": {
						"type": "string",
						"defaultValue": "ph"
					},
					"filename": {
						"type": "string",
						"defaultValue": "ph"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().filename,\n\n'List_',\n\nsubstring( convertFromUtc(utcNow(), 'Eastern Standard Time'),0,10),\n\n'.csv'\n\n)",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('training_output/',dataset().directory)",
							"type": "Expression"
						},
						"fileSystem": "training"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_adls_azstoragepwyjd')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_adls_azstoragepwyjd_Products')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_adls_azstoragepwyjd",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ProductList.csv",
						"folderPath": "training_output",
						"fileSystem": "training"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_adls_azstoragepwyjd')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_adls_azstoragepwyjd_SalesNew')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_adls_azstoragepwyjd",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SalesNew.csv",
						"folderPath": "training_data/FactInternetSales",
						"fileSystem": "training"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_adls_azstoragepwyjd')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_adls_azstoragepwyjd_dynamic')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_adls_azstoragepwyjd",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"directory": {
						"type": "string",
						"defaultValue": "ph"
					},
					"filename": {
						"type": "string",
						"defaultValue": "ph"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().directory",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_adls_azstoragepwyjd')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_adls_azstorageyjd_FactSales')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_adls_azstoragepwyjd",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "InternetSales.snappy.parquet",
						"folderPath": "training_data",
						"fileSystem": "training"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "ProductKey",
						"type": "INT32"
					},
					{
						"name": "OrderDateKey",
						"type": "INT32"
					},
					{
						"name": "DueDateKey",
						"type": "INT32"
					},
					{
						"name": "ShipDateKey",
						"type": "INT32"
					},
					{
						"name": "CustomerKey",
						"type": "INT32"
					},
					{
						"name": "PromotionKey",
						"type": "INT32"
					},
					{
						"name": "CurrencyKey",
						"type": "INT32"
					},
					{
						"name": "SalesTerritoryKey",
						"type": "INT32"
					},
					{
						"name": "SalesOrderNumber",
						"type": "UTF8"
					},
					{
						"name": "SalesOrderLineNumber",
						"type": "INT32"
					},
					{
						"name": "RevisionNumber",
						"type": "INT32"
					},
					{
						"name": "OrderQuantity",
						"type": "INT32"
					},
					{
						"name": "UnitPrice",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ExtendedAmount",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "UnitPriceDiscountPct",
						"type": "DOUBLE"
					},
					{
						"name": "DiscountAmount",
						"type": "DOUBLE"
					},
					{
						"name": "ProductStandardCost",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalProductCost",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "SalesAmount",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TaxAmt",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Freight",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "CarrierTrackingNumber",
						"type": "UTF8"
					},
					{
						"name": "CustomerPONumber",
						"type": "UTF8"
					},
					{
						"name": "OrderDate",
						"type": "INT96"
					},
					{
						"name": "DueDate",
						"type": "INT96"
					},
					{
						"name": "ShipDate",
						"type": "INT96"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_adls_azstoragepwyjd')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_sql_AdventureWorksDW_Dynamic')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_AdventureWorksDW",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string",
						"defaultValue": "ph"
					},
					"tablename": {
						"type": "string",
						"defaultValue": "ph"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_AdventureWorksDW')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_sql_AdventureWorksDW_InternetSales')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_AdventureWorksDW",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderDateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DueDateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShipDateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PromotionKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrencyKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesTerritoryKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesOrderNumber",
						"type": "varchar"
					},
					{
						"name": "SalesOrderLineNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "RevisionNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OrderQuantity",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "UnitPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ExtendedAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "UnitPriceDiscountPct",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DiscountAmount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ProductStandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalProductCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "SalesAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TaxAmt",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "CarrierTrackingNumber",
						"type": "varchar"
					},
					{
						"name": "CustomerPONumber",
						"type": "varchar"
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DueDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShipDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FactInternetSales"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_AdventureWorksDW')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_sql_AdventureWorksLT_InternetSales')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_AdventureWorksLT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "InternetSales"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_AdventureWorksLT')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_sql_AdventureWorksLT_Products')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_AdventureWorksLT",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string",
						"defaultValue": "ph"
					},
					"tablename": {
						"type": "string",
						"defaultValue": "ph"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ProductNumber",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SellStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SellEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DiscontinuedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ThumbNailPhoto",
						"type": "varbinary"
					},
					{
						"name": "ThumbnailPhotoFileName",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_AdventureWorksLT')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_sqlpool_DedicatedP1_SalesByProductYJD')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az-synapse-bootcamp-yjd-WorkspaceDefaultSqlServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "DedicatedP1"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "SalesByProductYJD"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az-synapse-bootcamp-yjd-WorkspaceDefaultSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_sqlpool_InternetSales')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az-synapse-bootcamp-yjd-WorkspaceDefaultSqlServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "DedicatedP1"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "InternetSales"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az-synapse-bootcamp-yjd-WorkspaceDefaultSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az-synapse-bootcamp-yjd-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('az-synapse-bootcamp-yjd-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az-synapse-bootcamp-yjd-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('az-synapse-bootcamp-yjd-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_adls_azstoragepwyjd')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('az_adls_azstoragepwyjd_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('az_adls_azstoragepwyjd_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_sql_AdventureWorksDW')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('az_sql_AdventureWorksDW_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_sql_AdventureWorksLT')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('az_sql_AdventureWorksLT_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SalesByProductYJD')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "az_adls_azstorageyjd_FactSales",
								"type": "DatasetReference"
							},
							"name": "InternetSales"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "az_sqlpool_DedicatedP1_SalesByProductYJD",
								"type": "DatasetReference"
							},
							"name": "LoadSalesByProduct"
						}
					],
					"transformations": [
						{
							"name": "SalesByProduct"
						},
						{
							"name": "RankProductBySales"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ProductKey as integer,",
						"          OrderDateKey as integer,",
						"          DueDateKey as integer,",
						"          ShipDateKey as integer,",
						"          CustomerKey as integer,",
						"          PromotionKey as integer,",
						"          CurrencyKey as integer,",
						"          SalesTerritoryKey as integer,",
						"          SalesOrderNumber as string,",
						"          SalesOrderLineNumber as integer,",
						"          RevisionNumber as integer,",
						"          OrderQuantity as integer,",
						"          UnitPrice as decimal(19,4),",
						"          ExtendedAmount as decimal(19,4),",
						"          UnitPriceDiscountPct as double,",
						"          DiscountAmount as double,",
						"          ProductStandardCost as decimal(19,4),",
						"          TotalProductCost as decimal(19,4),",
						"          SalesAmount as decimal(19,4),",
						"          TaxAmt as decimal(19,4),",
						"          Freight as decimal(19,4),",
						"          CarrierTrackingNumber as string,",
						"          CustomerPONumber as string,",
						"          OrderDate as timestamp,",
						"          DueDate as timestamp,",
						"          ShipDate as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> InternetSales",
						"InternetSales aggregate(groupBy(ProductKey),",
						"     TotalSales = sum(SalesAmount)) ~> SalesByProduct",
						"SalesByProduct rank(desc(TotalSales, true),",
						"     output(ProductRank as long)) ~> RankProductBySales",
						"RankProductBySales sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> LoadSalesByProduct"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/az_adls_azstorageyjd_FactSales')]",
				"[concat(variables('workspaceId'), '/datasets/az_sqlpool_DedicatedP1_SalesByProductYJD')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/03_Lab_CETAS_FromExternalTable')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE EXTERNAL FILE FORMAT [Parquet_yjd] \n    WITH ( FORMAT_TYPE = PARQUET)\nGO\n \nCREATE EXTERNAL DATA SOURCE [ADLSRoot_yjd] \n    WITH (\n        LOCATION   = 'https://azstoragepwyjd.dfs.core.windows.net/'\n    )\nGO\n \nCREATE EXTERNAL TABLE serverless.dbo.HolidayDataExtyjd\n   WITH(\n       LOCATION = 'training/training_output/HolidayDatayjd',\n     DATA_SOURCE = [ADLSRoot_yjd],\n     FILE_FORMAT = [Parquet_yjd]\n    )\n    AS \n       SELECT \n            * \n       FROM \n            serverless.dbo.HolidayDatayjd\n \n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "serverless",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/03_Lab_CETAS_FromOpenrowset')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "/*\n\tThe external resources of your DataSource and File_Format were created in the previous lab and do not need to be\n\tcreated again. Most of the time you will leverage already created objects in your database \n\trather than recreating them.\n\n\tYou will see where to find these resources later in this lab.\n*/\n\nCREATE EXTERNAL TABLE serverless.dbo.HolidayDataExt_yjd\n   WITH(\n       LOCATION = 'training/training_output/HolidaysByCountry_yjd', -- Folder to load the data to.\n     DATA_SOURCE = [ADLSRoot_yjd],\n     FILE_FORMAT = [Parquet_yjd]\n    )\n    AS \n       SELECT\n            CountryOrRegion,\n            COUNT(*) AS TotalHolidayCount\n        FROM\n            OPENROWSET(\n                BULK 'https://azstoragepwyjd.dfs.core.windows.net/training/training_data/Holiday.snappy.parquet',\n                FORMAT='PARQUET'\n            ) AS [result]\n        GROUP BY CountryOrRegion\n        ORDER BY TotalHolidayCount DESC\n        GO\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab03B1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "LabSQL"
				},
				"content": {
					"query": "-- This is auto-generated code\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://azstoragepwyjd.dfs.core.windows.net/training/training_data/Holiday.snappy.parquet',\n        FORMAT = 'PARQUET'\n    ) AS [result]\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab03B2')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "LabSQL"
				},
				"content": {
					"query": "SELECT\n    countryOrRegion AS Country, holidayName AS Holiday, date\nFROM\n    OPENROWSET(\n        BULK 'https://azstoragepwyjd.dfs.core.windows.net/training/training_data/Holiday.snappy.parquet',\n        FORMAT = 'PARQUET'\n    ) AS [result]\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab03D')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'training_azstoragepwyjd_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [training_azstoragepwyjd_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://training@azstoragepwyjd.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE HolidayDatayjd (\n\t[countryOrRegion] nvarchar(4000),\n\t[holidayName] nvarchar(4000),\n\t[normalizeHolidayName] nvarchar(4000),\n\t[isPaidTimeOff] bit,\n\t[countryRegionCode] nvarchar(4000),\n\t[date] datetime2(7)\n\t)\n\tWITH (\n\tLOCATION = 'training_data/Holiday.snappy.parquet',\n\tDATA_SOURCE = [training_azstoragepwyjd_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM dbo.HolidayDatayjd\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "serverless",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DedicatedP1')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus"
		}
	]
}