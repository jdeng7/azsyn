{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "cpsynapsews"
		},
		"CareAbout SFTP_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CareAbout SFTP'"
		},
		"RendrCarePop_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'RendrCarePop'"
		},
		"SqlServer1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer1'"
		},
		"az-synapse-bootcamp-yjd-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'az-synapse-bootcamp-yjd-WorkspaceDefaultSqlServer'"
		},
		"az_adls_azstoragepwyjd_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'az_adls_azstoragepwyjd'"
		},
		"az_sql_AdventureWorksDW_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'az_sql_AdventureWorksDW'"
		},
		"az_sql_AdventureWorksLT_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'az_sql_AdventureWorksLT'"
		},
		"az_sql_cpazuredb_dnadata_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'az_sql_cpazuredb_dnadata'"
		},
		"az_sql_cpazuredb_dnadata_dev_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'az_sql_cpazuredb_dnadata_dev'"
		},
		"az_sql_cpazuredb_dnadata_test_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'az_sql_cpazuredb_dnadata_test'"
		},
		"azsynwsyjd-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'azsynwsyjd-WorkspaceDefaultSqlServer'"
		},
		"cpsynapsews-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'cpsynapsews-WorkspaceDefaultSqlServer'"
		},
		"az-synapse-bootcamp-yjd-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azstoragepwyjd.dfs.core.windows.net"
		},
		"az_adls_azstoragepwyjd_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azstoragepwyjd.dfs.core.windows.net/"
		},
		"azsynwsyjd-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azsynwsyjdlake.dfs.core.windows.net"
		},
		"cpsynapsews-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://cpdlstorage.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/Lab04A_LoadInternetSales')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "az_sql_AdventureWorksDW_InternetSales",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "az_sql_AdventureWorksLT_InternetSales",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Initial Loads"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-08T02:39:58Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/az_sql_AdventureWorksDW_InternetSales')]",
				"[concat(variables('workspaceId'), '/datasets/az_sql_AdventureWorksLT_InternetSales')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab04B_LoadProducts')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "CreateProductList",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "az_sql_AdventureWorksLT_Products",
								"type": "DatasetReference",
								"parameters": {
									"schema": {
										"value": "@pipeline().parameters.schema",
										"type": "Expression"
									},
									"tablename": {
										"value": "@pipeline().parameters.tablename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "az_adls_azstoragepwyjd_ProductList",
								"type": "DatasetReference",
								"parameters": {
									"directory": {
										"value": "@pipeline().parameters.tablename",
										"type": "Expression"
									},
									"filename": {
										"value": "@pipeline().parameters.tablename",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"schema": {
						"type": "string",
						"defaultValue": "ph"
					},
					"tablename": {
						"type": "string",
						"defaultValue": "ph"
					}
				},
				"folder": {
					"name": "ClassLabs"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-09T04:22:45Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/az_sql_AdventureWorksLT_Products')]",
				"[concat(variables('workspaceId'), '/datasets/az_adls_azstoragepwyjd_ProductList')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab05C_LoadInternetSales')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "az-synapse-bootcamp-yjd-WorkspaceDefaultStorage",
									"type": "LinkedServiceReference"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "az_sql_AdventureWorksDW_InternetSales",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "az_sqlpool_InternetSales",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ClassLabs"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-08T03:13:18Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/az_sql_AdventureWorksDW_InternetSales')]",
				"[concat(variables('workspaceId'), '/datasets/az_sqlpool_InternetSales')]",
				"[concat(variables('workspaceId'), '/linkedServices/az-synapse-bootcamp-yjd-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab06A_MetadataActivity')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "az_adls_azstoragepwyjd_Products",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"itemName",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[dbo].[usp_InsertLastModifiedDate]",
							"storedProcedureParameters": {
								"FileName": {
									"value": {
										"value": "@activity('Get Metadata1').output.itemName",
										"type": "Expression"
									},
									"type": "String"
								},
								"ModifiedDate": {
									"value": {
										"value": "@activity('Get Metadata1').output.lastModified",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RecordInsertDate": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "az_sql_AdventureWorksLT",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ClassLabs"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-09T12:51:56Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/az_adls_azstoragepwyjd_Products')]",
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_AdventureWorksLT')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab06C_LoadTaskQueue')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "az_adls_azstoragepwyjd_InternetSales",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[dbo].[usp_InsertFileNames]",
										"storedProcedureParameters": {
											"DateInserted": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"filename": {
												"value": {
													"value": "@item().name",
													"type": "Expression"
												},
												"type": "String"
											},
											"Status": {
												"value": "0",
												"type": "Int32"
											},
											"TotalRows": {
												"value": null,
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "az_sql_AdventureWorksLT",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ClassLabs"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-09T12:52:19Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/az_adls_azstoragepwyjd_InternetSales')]",
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_AdventureWorksLT')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab06D_CheckFileExist')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('fileexists')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Metadata1",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "az_adls_azstoragepwyjd_SalesNew",
											"type": "DatasetReference",
											"parameters": {}
										},
										"fieldList": [
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get Metadata1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileexists",
										"value": {
											"value": "@activity('Get Metadata1').output.exists",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 3
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"fileexists": {
						"type": "Boolean",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "ClassLabs"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-09T14:42:43Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/az_adls_azstoragepwyjd_SalesNew')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab06E_FilterMetadataActivity')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "az_adls_azstoragepwyjd_Employees",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"exists",
								"itemName",
								"lastModified",
								"itemType"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'inputEmp')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[dbo].[usp_InsertFileInformation]",
										"storedProcedureParameters": {
											"FileName": {
												"value": {
													"value": "@item().name",
													"type": "Expression"
												},
												"type": "String"
											},
											"ModifiedDate": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"RecordInsertDate": {
												"value": {
													"value": "@convertFromUtc(utcnow(),'Eastern Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "az_sql_AdventureWorksLT",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ClassLabs"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-09T14:42:49Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/az_adls_azstoragepwyjd_Employees')]",
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_AdventureWorksLT')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab06F_Lookup_IfCondition')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get Last Modified Date",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "az_adls_azstoragepwyjd_InputEmp",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Get Last Execution Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[dbo].[usp_LastLoadDate]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "az_sql_AdventureWorksLT_Products",
								"type": "DatasetReference",
								"parameters": {
									"schema": "ph",
									"tablename": "ph"
								}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Last Modified Date",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get Last Execution Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(\nactivity('Get Last Modified Date').output.lastModified,\nactivity('Get Last Execution Date').output.firstRow.ExecutionDate\n)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait_False",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Wait_True",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ClassLabs"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-09T15:48:11Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/az_adls_azstoragepwyjd_InputEmp')]",
				"[concat(variables('workspaceId'), '/datasets/az_sql_AdventureWorksLT_Products')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab07A_WorkerPipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "az_sql_AdventureWorksDW_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"schema": {
										"value": "@pipeline().parameters.schema",
										"type": "Expression"
									},
									"tablename": {
										"value": "@pipeline().parameters.tablename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "az_adls_azstoragepwyjd_dynamic",
								"type": "DatasetReference",
								"parameters": {
									"directory": {
										"value": "@toLower(pipeline().parameters.tablename)",
										"type": "Expression"
									},
									"filename": {
										"value": "@concat(\n\npipeline().parameters.tablename,\n\n'List_',\n\nsubstring( convertFromUtc( utcNow(),'Eastern Standard Time'),0,10)\n\n)",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"schema": {
						"type": "string"
					},
					"tablename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ClassLabs"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-09T16:33:06Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/az_sql_AdventureWorksDW_Dynamic')]",
				"[concat(variables('workspaceId'), '/datasets/az_adls_azstoragepwyjd_dynamic')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab07B_ParentPipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "\nSELECT \n\tTABLE_SCHEMA as TableSchema,\n\tTABLE_NAME as TableName\nFROM INFORMATION_SCHEMA.TABLES\nWHERE\n\tTABLE_NAME IN (\n\t\t'DimProduct',\n\t\t'DimProductCategory',\n\t\t'DimCustomer',\n\t\t'DimPromotion',\n\t\t'DimEmployee',\n\t\t'DimReseller',\n\t\t'DimSalesReason',\n\t\t'DimOrganization')",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "az_sql_AdventureWorksDW_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"schema": "ph",
									"tablename": "ph"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Lab07A_WorkerPipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"schema": {
												"value": "@item().TableSchema",
												"type": "Expression"
											},
											"tablename": {
												"value": "@item().TableName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ClassLabs"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-09T22:55:43Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/az_sql_AdventureWorksDW_Dynamic')]",
				"[concat(variables('workspaceId'), '/pipelines/Lab07A_WorkerPipeline')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab09B_DataFlowTransformation')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "DataFlowTransformation",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SalesByProductYJD",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"InternetSales": {},
									"LoadSalesByProduct": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "az-synapse-bootcamp-yjd-WorkspaceDefaultStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "adfstagedpolybasetempdata"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ClassLabs"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-10T12:25:51Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/SalesByProductYJD')]",
				"[concat(variables('workspaceId'), '/linkedServices/az-synapse-bootcamp-yjd-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/MoveFiles')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Move files from one folder to another folder",
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "BinaryDataSource_Folder",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceStore_Location",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceStore_Directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "CopyAFile",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											},
											"recursive": false
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "BinaryDataSource_File",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.SourceStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.SourceStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "BinaryDataDestination",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.DestinationStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.DestinationStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "CopyAFile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@pipeline().parameters.deleteSource",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "DeleteAFile_copy1",
												"description": "Delete a file from the source store",
												"type": "Delete",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "BinaryDataSource_File",
														"type": "DatasetReference",
														"parameters": {
															"Container": {
																"value": "@pipeline().parameters.SourceStore_Location",
																"type": "Expression"
															},
															"Directory": {
																"value": "@pipeline().parameters.SourceStore_Directory",
																"type": "Expression"
															},
															"filename": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": true
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceStore_Location": {
						"type": "String",
						"defaultValue": "rendrcaresftp"
					},
					"SourceStore_Directory": {
						"type": "String",
						"defaultValue": "healthfirst/Census"
					},
					"DestinationStore_Location": {
						"type": "String",
						"defaultValue": "data"
					},
					"DestinationStore_Directory": {
						"type": "String",
						"defaultValue": "healthfirst/rendrcaresftp/Census"
					},
					"deleteSource": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "James/tools/moveFiles"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-21T03:27:16Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/BinaryDataSource_Folder')]",
				"[concat(variables('workspaceId'), '/datasets/BinaryDataSource_File')]",
				"[concat(variables('workspaceId'), '/datasets/BinaryDataDestination')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/RunZ')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Truncate tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ZCODE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"IP": {},
									"OP": {},
									"PROF": {},
									"MEM": {},
									"ZFILTER": {},
									"ZCODECAT": {},
									"sink1": {},
									"sink2": {},
									"sink3": {},
									"sink4": {},
									"sink5": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Truncate tables",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "az_sql_cpazuredb_dnadata",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "truncate table ZROWC;\ntruncate table ZSINK;"
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "James/tools/demos"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-14T02:23:15Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/ZCODE')]",
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_cpazuredb_dnadata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/conditionalDetete')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.deleteSource",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete1",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "BinaryDataSource_File",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.src_container",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.src_directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												}
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "CareAbout SFTP",
												"type": "LinkedServiceReference"
											},
											"path": "data/logs"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"deleteSource": {
						"type": "bool"
					},
					"src_container": {
						"type": "string"
					},
					"src_directory": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "James/tools/moveFiles"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-21T03:27:20Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/BinaryDataSource_File')]",
				"[concat(variables('workspaceId'), '/linkedServices/CareAbout SFTP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/copyAll')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "*",
									"wildcardFileName": "*",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "BinaryDataSource_Folder",
								"type": "DatasetReference",
								"parameters": {
									"Container": "rendrcaresftp",
									"Directory": "*"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "BinaryDataDestination_Folder",
								"type": "DatasetReference",
								"parameters": {
									"dest_container": "data",
									"dest_directory": "rendrcaresftp"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "James/tools/moveFiles"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-21T03:27:38Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/BinaryDataSource_Folder')]",
				"[concat(variables('workspaceId'), '/datasets/BinaryDataDestination_Folder')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/demoLoadTransform')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy PDFCDH  data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "cpsynapsews-WorkspaceDefaultStorage",
									"type": "LinkedServiceReference"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PDFC_DentalHeaderData1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ASA_PD_FC_DentalHeader_Tbl",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy PDFCDL data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy PDFCDH  data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlPoolSink",
								"allowCopyCommand": true,
								"copyCommandSettings": {}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "PDFC_DentalLineData1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "az_sqlpool_PDFCDL_Tbl",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy PDFCDL data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[dbo].[demoLoadTransform]"
						},
						"linkedServiceName": {
							"referenceName": "cpsynapsews-WorkspaceDefaultSqlServer",
							"type": "LinkedServiceReference",
							"parameters": {
								"DBName": "cpsqlpool"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "James/tools/demos"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-14T02:25:53Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/PDFC_DentalHeaderData1')]",
				"[concat(variables('workspaceId'), '/datasets/ASA_PD_FC_DentalHeader_Tbl')]",
				"[concat(variables('workspaceId'), '/datasets/PDFC_DentalLineData1')]",
				"[concat(variables('workspaceId'), '/datasets/az_sqlpool_PDFCDL_Tbl')]",
				"[concat(variables('workspaceId'), '/linkedServices/cpsynapsews-WorkspaceDefaultSqlServer')]",
				"[concat(variables('workspaceId'), '/linkedServices/cpsynapsews-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/demoLoadTransform2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy PDFCDH  data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy PDFCDL data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "cpsynapsews-WorkspaceDefaultStorage",
									"type": "LinkedServiceReference"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PDFC_DentalHeaderData1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ASA_PD_FC_DentalHeader_Tbl",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy PDFCDL data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlPoolSink",
								"allowCopyCommand": true,
								"copyCommandSettings": {}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "PDFC_DentalLineData1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "az_sqlpool_PDFCDL_Tbl",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy PDFCDH  data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "cpsynapsews-WorkspaceDefaultStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "adfstagedpolybasetempdata"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"sourceStagingConcurrency": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "James/tools/demos"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-14T02:25:56Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/PDFC_DentalHeaderData1')]",
				"[concat(variables('workspaceId'), '/datasets/ASA_PD_FC_DentalHeader_Tbl')]",
				"[concat(variables('workspaceId'), '/datasets/PDFC_DentalLineData1')]",
				"[concat(variables('workspaceId'), '/datasets/az_sqlpool_PDFCDL_Tbl')]",
				"[concat(variables('workspaceId'), '/dataflows/Dataflow1')]",
				"[concat(variables('workspaceId'), '/linkedServices/cpsynapsews-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dnaImport1')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "List Config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('List Config').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Get Metadata1",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "az_blob_dataFolder_dynamic",
											"type": "DatasetReference",
											"parameters": {
												"directory": {
													"value": "@item().src_directory",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Get Metadata1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "dnaImport2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"fileArray": {
												"value": "@activity('Get Metadata1').output.childItems",
												"type": "Expression"
											},
											"src_directory": {
												"value": "@item().src_directory",
												"type": "Expression"
											},
											"dest_schemaName": {
												"value": "@item().dest_schemaName",
												"type": "Expression"
											},
											"dest_tableName": {
												"value": "@item().stg_tableName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "List Config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select [src_directory],[dest_schemaName], [stg_tableName]\nfrom dbo.azconfig\nwhere active = '1' and aztype = 'ImportFolder'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "az_sql_dnadata_db",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "James/tools/dnsImportFromFolder"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-14T04:17:36Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/az_sql_dnadata_db')]",
				"[concat(variables('workspaceId'), '/datasets/az_blob_dataFolder_dynamic')]",
				"[concat(variables('workspaceId'), '/pipelines/dnaImport2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dnaImport2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.fileArray",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select sum(case when loadedFile = '@{item().name}' then 1 else 0 end) as test \nfrom azlog\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "az_sql_dnadata_db",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('Lookup1').output.firstRow.test , 0)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Copy data1_copy1",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"additionalColumns": [
															{
																"name": "filePath",
																"value": "$$FILEPATH"
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false,
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "az_blob_dataFile_dynamic",
														"type": "DatasetReference",
														"parameters": {
															"directory": {
																"value": "@pipeline().parameters.src_directory",
																"type": "Expression"
															},
															"fileName": {
																"value": "@item().name",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "az_sql_dnadata_dynamic",
														"type": "DatasetReference",
														"parameters": {
															"schema": {
																"value": "@pipeline().parameters.dest_schemaName",
																"type": "Expression"
															},
															"tableName": {
																"value": "@pipeline().parameters.dest_tableName",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Script1",
												"type": "Script",
												"dependsOn": [
													{
														"activity": "Copy data1_copy1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"linkedServiceName": {
													"referenceName": "az_sql_cpazuredb_dnadata",
													"type": "LinkedServiceReference"
												},
												"typeProperties": {
													"scripts": [
														{
															"type": "Query",
															"text": {
																"value": "insert azlog (loadedFile, LoadedOn)\nselect '@{item().name}',getdate()",
																"type": "Expression"
															}
														}
													]
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"fileArray": {
						"type": "array"
					},
					"src_directory": {
						"type": "string"
					},
					"dest_schemaName": {
						"type": "string"
					},
					"dest_tableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "James/tools/dnsImportFromFolder"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-14T02:26:03Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/az_sql_dnadata_db')]",
				"[concat(variables('workspaceId'), '/datasets/az_blob_dataFile_dynamic')]",
				"[concat(variables('workspaceId'), '/datasets/az_sql_dnadata_dynamic')]",
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_cpazuredb_dnadata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/testDyn')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "GetFiles",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "MEMfolder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEachfile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFiles').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy files",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"fileListPath": {
													"value": "@activity('GetFiles').output.childItems",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "SqlPoolSink",
											"allowCopyCommand": true,
											"copyCommandSettings": {}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "COMPANY_CODE",
														"type": "String"
													},
													"sink": {
														"name": "COMPANY_CODE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LINE_OF_BUSINESS_DESC",
														"type": "String"
													},
													"sink": {
														"name": "LINE_OF_BUSINESS_DESC",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "MEDICAID_NO",
														"type": "String"
													},
													"sink": {
														"name": "MEDICAID_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "MEDICARE_NO",
														"type": "String"
													},
													"sink": {
														"name": "MEDICARE_NO",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SUBSCRIBER_ID",
														"type": "String"
													},
													"sink": {
														"name": "SUBSCRIBER_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "MEMB_FIRST_NAME",
														"type": "String"
													},
													"sink": {
														"name": "MEMB_FIRST_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "MEMB_MIDDLE_INITIAL",
														"type": "String"
													},
													"sink": {
														"name": "MEMB_MIDDLE_INITIAL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "MEMB_LAST_NAME",
														"type": "String"
													},
													"sink": {
														"name": "MEMB_LAST_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "GENDER",
														"type": "String"
													},
													"sink": {
														"name": "GENDER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DOB",
														"type": "String"
													},
													"sink": {
														"name": "DOB",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "MEMB_ADDRESS_LINE_1",
														"type": "String"
													},
													"sink": {
														"name": "MEMB_ADDRESS_LINE_1",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "MEMB_ADDRESS_LINE_2",
														"type": "String"
													},
													"sink": {
														"name": "MEMB_ADDRESS_LINE_2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "MEMB_CITY",
														"type": "String"
													},
													"sink": {
														"name": "MEMB_CITY",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "MEMB_STATE",
														"type": "String"
													},
													"sink": {
														"name": "MEMB_STATE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "MEMB_ZIP",
														"type": "String"
													},
													"sink": {
														"name": "MEMB_ZIP",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PROVIDER_ID",
														"type": "String"
													},
													"sink": {
														"name": "PROVIDER_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "NATIONAL_PROVIDER_ID",
														"type": "String"
													},
													"sink": {
														"name": "NATIONAL_PROVIDER_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "MPIN",
														"type": "String"
													},
													"sink": {
														"name": "MPIN",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PROV_FULL_NAME",
														"type": "String"
													},
													"sink": {
														"name": "PROV_FULL_NAME",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "HOME_PHONE_NUMBER",
														"type": "String"
													},
													"sink": {
														"name": "HOME_PHONE_NUMBER",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "IPRO_RISK_SCORE",
														"type": "String"
													},
													"sink": {
														"name": "IPRO_RISK_SCORE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PROV_TAX_ID",
														"type": "String"
													},
													"sink": {
														"name": "PROV_TAX_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ELIG_START_DATE",
														"type": "String"
													},
													"sink": {
														"name": "ELIG_START_DATE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ELIG_END_DATE",
														"type": "String"
													},
													"sink": {
														"name": "ELIG_END_DATE",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DIAMOND_ID",
														"type": "String"
													},
													"sink": {
														"name": "DIAMOND_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ETHNIC_CODE_DESC",
														"type": "String"
													},
													"sink": {
														"name": "ETHNIC_CODE_DESC",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "MEMfolder",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "MEMtbl",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "James/Tests"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-21T15:26:37Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/MEMfolder')]",
				"[concat(variables('workspaceId'), '/datasets/MEMtbl')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/testFolder')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "CpFCDH",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowCopyCommand": true,
								"copyCommandSettings": {}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "PDFCDHfolder",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ASA_PD_FC_DentalHeader_Tbl",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "James/Tests"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-28T16:02:13Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/PDFCDHfolder')]",
				"[concat(variables('workspaceId'), '/datasets/ASA_PD_FC_DentalHeader_Tbl')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/tetsCopySqlserver1')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServer1CCMPatient",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "destTestCCMPatient",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "James/Tests"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T13:56:43Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SqlServer1CCMPatient')]",
				"[concat(variables('workspaceId'), '/datasets/destTestCCMPatient')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ASATblAgg')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cpsynapsews-WorkspaceDefaultSqlServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "cpsqlpool"
					}
				},
				"folder": {
					"name": "James/Zarchive"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "AggName",
						"type": "varchar"
					},
					{
						"name": "AggNumber",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "demoAgg"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/cpsynapsews-WorkspaceDefaultSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ASA_PD_FC_DemtalLine_Tbl')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cpsynapsews-WorkspaceDefaultSqlServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "cpsqlpool"
					}
				},
				"folder": {
					"name": "James/Zarchive"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "FileName",
						"type": "varchar"
					},
					{
						"name": "claim_id",
						"type": "varchar"
					},
					{
						"name": "claim_line",
						"type": "varchar"
					},
					{
						"name": "service_from_date",
						"type": "varchar"
					},
					{
						"name": "service_to_date",
						"type": "varchar"
					},
					{
						"name": "place_of_service",
						"type": "varchar"
					},
					{
						"name": "emergency_indicator",
						"type": "varchar"
					},
					{
						"name": "procedure_code",
						"type": "varchar"
					},
					{
						"name": "modifier_1",
						"type": "varchar"
					},
					{
						"name": "modifier_2",
						"type": "varchar"
					},
					{
						"name": "modifier_3",
						"type": "varchar"
					},
					{
						"name": "modifier_4",
						"type": "varchar"
					},
					{
						"name": "diagnosis_code_pointer",
						"type": "varchar"
					},
					{
						"name": "line_charge",
						"type": "varchar"
					},
					{
						"name": "billed_units",
						"type": "varchar"
					},
					{
						"name": "id_qualifier",
						"type": "varchar"
					},
					{
						"name": "provider_id",
						"type": "varchar"
					},
					{
						"name": "plan_paid",
						"type": "varchar"
					},
					{
						"name": "member_liability",
						"type": "varchar"
					},
					{
						"name": "allowed_amount",
						"type": "varchar"
					},
					{
						"name": "covered_units",
						"type": "varchar"
					},
					{
						"name": "member_responsibility",
						"type": "varchar"
					},
					{
						"name": "capitation_indicator",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "PAYOR_DATA",
					"table": "FidelisCare_DentalLine_stg"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/cpsynapsews-WorkspaceDefaultSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ASA_PD_FC_DentalHeader_Data')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CareAbout SFTP",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "James/Zarchive"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": "FIDELIS/dataFiles",
						"container": "data"
					},
					"columnDelimiter": "|",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "claim_id",
						"type": "String"
					},
					{
						"name": "billing_provider_id",
						"type": "String"
					},
					{
						"name": "rendering_provider_id",
						"type": "String"
					},
					{
						"name": "first_date_of_service",
						"type": "String"
					},
					{
						"name": "last_date_of_service",
						"type": "String"
					},
					{
						"name": "member_id",
						"type": "String"
					},
					{
						"name": "patient_dob",
						"type": "String"
					},
					{
						"name": "patient_gender",
						"type": "String"
					},
					{
						"name": "patient_zip_code",
						"type": "String"
					},
					{
						"name": "line_of_business",
						"type": "String"
					},
					{
						"name": "product",
						"type": "String"
					},
					{
						"name": "blue_card_identifier",
						"type": "String"
					},
					{
						"name": "total_charge",
						"type": "String"
					},
					{
						"name": "allowed_amount",
						"type": "String"
					},
					{
						"name": "member_responsibility",
						"type": "String"
					},
					{
						"name": "plan_paid",
						"type": "String"
					},
					{
						"name": "icd_version",
						"type": "String"
					},
					{
						"name": "diagnosis_1",
						"type": "String"
					},
					{
						"name": "diagnosis_2",
						"type": "String"
					},
					{
						"name": "diagnosis_3",
						"type": "String"
					},
					{
						"name": "diagnosis_4",
						"type": "String"
					},
					{
						"name": "diagnosis_5",
						"type": "String"
					},
					{
						"name": "diagnosis_6",
						"type": "String"
					},
					{
						"name": "diagnosis_7",
						"type": "String"
					},
					{
						"name": "diagnosis_8",
						"type": "String"
					},
					{
						"name": "diagnosis_9",
						"type": "String"
					},
					{
						"name": "diagnosis_10",
						"type": "String"
					},
					{
						"name": "diagnosis_11",
						"type": "String"
					},
					{
						"name": "payment_methodology",
						"type": "String"
					},
					{
						"name": "source_system",
						"type": "String"
					},
					{
						"name": "primary_payer",
						"type": "String"
					},
					{
						"name": "adjustment_claim_indicator",
						"type": "String"
					},
					{
						"name": "adjusted_claim_id",
						"type": "String"
					},
					{
						"name": "employer_id",
						"type": "String"
					},
					{
						"name": "paid_date",
						"type": "String"
					},
					{
						"name": "posted_date",
						"type": "String"
					},
					{
						"name": "claim_status",
						"type": "String"
					},
					{
						"name": "denial_reason",
						"type": "String"
					},
					{
						"name": "member_pcp_id",
						"type": "String"
					},
					{
						"name": "member_pcp_id_npi",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/CareAbout SFTP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ASA_PD_FC_DentalHeader_Tbl')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cpsynapsews-WorkspaceDefaultSqlServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "cpsqlpool"
					}
				},
				"folder": {
					"name": "James/Zarchive"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "FileName",
						"type": "varchar"
					},
					{
						"name": "claim_id",
						"type": "varchar"
					},
					{
						"name": "billing_provider_id",
						"type": "varchar"
					},
					{
						"name": "rendering_provider_id",
						"type": "varchar"
					},
					{
						"name": "first_date_of_service",
						"type": "varchar"
					},
					{
						"name": "last_date_of_service",
						"type": "varchar"
					},
					{
						"name": "member_id",
						"type": "varchar"
					},
					{
						"name": "patient_dob",
						"type": "varchar"
					},
					{
						"name": "patient_gender",
						"type": "varchar"
					},
					{
						"name": "patient_zip_code",
						"type": "varchar"
					},
					{
						"name": "line_of_business",
						"type": "varchar"
					},
					{
						"name": "product",
						"type": "varchar"
					},
					{
						"name": "blue_card_identifier",
						"type": "varchar"
					},
					{
						"name": "total_charge",
						"type": "varchar"
					},
					{
						"name": "allowed_amount",
						"type": "varchar"
					},
					{
						"name": "member_responsibility",
						"type": "varchar"
					},
					{
						"name": "plan_paid",
						"type": "varchar"
					},
					{
						"name": "icd_version",
						"type": "varchar"
					},
					{
						"name": "diagnosis_1",
						"type": "varchar"
					},
					{
						"name": "diagnosis_2",
						"type": "varchar"
					},
					{
						"name": "diagnosis_3",
						"type": "varchar"
					},
					{
						"name": "diagnosis_4",
						"type": "varchar"
					},
					{
						"name": "diagnosis_5",
						"type": "varchar"
					},
					{
						"name": "diagnosis_6",
						"type": "varchar"
					},
					{
						"name": "diagnosis_7",
						"type": "varchar"
					},
					{
						"name": "diagnosis_8",
						"type": "varchar"
					},
					{
						"name": "diagnosis_9",
						"type": "varchar"
					},
					{
						"name": "diagnosis_10",
						"type": "varchar"
					},
					{
						"name": "diagnosis_11",
						"type": "varchar"
					},
					{
						"name": "payment_methodology",
						"type": "varchar"
					},
					{
						"name": "source_system",
						"type": "varchar"
					},
					{
						"name": "primary_payer",
						"type": "varchar"
					},
					{
						"name": "adjustment_claim_indicator",
						"type": "varchar"
					},
					{
						"name": "adjusted_claim_id",
						"type": "varchar"
					},
					{
						"name": "employer_id",
						"type": "varchar"
					},
					{
						"name": "paid_date",
						"type": "varchar"
					},
					{
						"name": "posted_date",
						"type": "varchar"
					},
					{
						"name": "claim_status",
						"type": "varchar"
					},
					{
						"name": "denial_reason",
						"type": "varchar"
					},
					{
						"name": "member_pcp_id",
						"type": "varchar"
					},
					{
						"name": "member_pcp_id_npi",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "PAYOR_DATA",
					"table": "FidelisCare_DentalHeader_stg"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/cpsynapsews-WorkspaceDefaultSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/BinaryDataDestination')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "It describes the destination store.",
				"linkedServiceName": {
					"referenceName": "CareAbout SFTP",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "String"
					},
					"Directory": {
						"type": "String"
					},
					"filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "James/MoveFile"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@{dataset().Directory}",
							"type": "Expression"
						},
						"container": {
							"value": "@{dataset().Container}",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/CareAbout SFTP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/BinaryDataDestination_Folder')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CareAbout SFTP",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dest_container": {
						"type": "string"
					},
					"dest_directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "James/MoveFile"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().dest_directory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().dest_container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/CareAbout SFTP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/BinaryDataSource_File')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "It describes the file in the data source store.",
				"linkedServiceName": {
					"referenceName": "CareAbout SFTP",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "String"
					},
					"Directory": {
						"type": "String"
					},
					"filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "James/MoveFile"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@{dataset().Directory}",
							"type": "Expression"
						},
						"container": {
							"value": "@{dataset().Container}",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/CareAbout SFTP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/BinaryDataSource_Folder')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "It describes the folder in the data source store.",
				"linkedServiceName": {
					"referenceName": "CareAbout SFTP",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "String"
					},
					"Directory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "James/MoveFile"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@{dataset().Directory}",
							"type": "Expression"
						},
						"container": {
							"value": "@{dataset().Container}",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/CareAbout SFTP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/MEMfolder')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CareAbout SFTP",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "James/Zarchive"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "UHCCAID",
						"container": "data"
					},
					"columnDelimiter": "|",
					"rowDelimiter": "\n",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "COMPANY_CODE",
						"type": "String"
					},
					{
						"name": "LINE_OF_BUSINESS_DESC",
						"type": "String"
					},
					{
						"name": "MEDICAID_NO",
						"type": "String"
					},
					{
						"name": "MEDICARE_NO",
						"type": "String"
					},
					{
						"name": "SUBSCRIBER_ID",
						"type": "String"
					},
					{
						"name": "MEMB_FIRST_NAME",
						"type": "String"
					},
					{
						"name": "MEMB_MIDDLE_INITIAL",
						"type": "String"
					},
					{
						"name": "MEMB_LAST_NAME",
						"type": "String"
					},
					{
						"name": "GENDER",
						"type": "String"
					},
					{
						"name": "DOB",
						"type": "String"
					},
					{
						"name": "MEMB_ADDRESS_LINE_1",
						"type": "String"
					},
					{
						"name": "MEMB_ADDRESS_LINE_2",
						"type": "String"
					},
					{
						"name": "MEMB_CITY",
						"type": "String"
					},
					{
						"name": "MEMB_STATE",
						"type": "String"
					},
					{
						"name": "MEMB_ZIP",
						"type": "String"
					},
					{
						"name": "PROVIDER_ID",
						"type": "String"
					},
					{
						"name": "NATIONAL_PROVIDER_ID",
						"type": "String"
					},
					{
						"name": "MPIN",
						"type": "String"
					},
					{
						"name": "PROV_FULL_NAME",
						"type": "String"
					},
					{
						"name": "HOME_PHONE_NUMBER",
						"type": "String"
					},
					{
						"name": "IPRO_RISK_SCORE",
						"type": "String"
					},
					{
						"name": "PROV_TAX_ID",
						"type": "String"
					},
					{
						"name": "ELIG_START_DATE",
						"type": "String"
					},
					{
						"name": "ELIG_END_DATE",
						"type": "String"
					},
					{
						"name": "DIAMOND_ID",
						"type": "String"
					},
					{
						"name": "ETHNIC_CODE_DESC",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/CareAbout SFTP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/MEMtbl')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "James/Zarchive"
				},
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "COMPANY_CODE",
						"type": "nvarchar"
					},
					{
						"name": "LINE_OF_BUSINESS_DESC",
						"type": "nvarchar"
					},
					{
						"name": "MEDICAID_NO",
						"type": "nvarchar"
					},
					{
						"name": "MEDICARE_NO",
						"type": "nvarchar"
					},
					{
						"name": "SUBSCRIBER_ID",
						"type": "nvarchar"
					},
					{
						"name": "MEMB_FIRST_NAME",
						"type": "nvarchar"
					},
					{
						"name": "MEMB_MIDDLE_INITIAL",
						"type": "nvarchar"
					},
					{
						"name": "MEMB_LAST_NAME",
						"type": "nvarchar"
					},
					{
						"name": "GENDER",
						"type": "nvarchar"
					},
					{
						"name": "DOB",
						"type": "nvarchar"
					},
					{
						"name": "MEMB_ADDRESS_LINE_1",
						"type": "nvarchar"
					},
					{
						"name": "MEMB_ADDRESS_LINE_2",
						"type": "nvarchar"
					},
					{
						"name": "MEMB_CITY",
						"type": "nvarchar"
					},
					{
						"name": "MEMB_STATE",
						"type": "nvarchar"
					},
					{
						"name": "MEMB_ZIP",
						"type": "nvarchar"
					},
					{
						"name": "PROVIDER_ID",
						"type": "nvarchar"
					},
					{
						"name": "NATIONAL_PROVIDER_ID",
						"type": "nvarchar"
					},
					{
						"name": "MPIN",
						"type": "nvarchar"
					},
					{
						"name": "PROV_FULL_NAME",
						"type": "nvarchar"
					},
					{
						"name": "HOME_PHONE_NUMBER",
						"type": "nvarchar"
					},
					{
						"name": "IPRO_RISK_SCORE",
						"type": "nvarchar"
					},
					{
						"name": "PROV_TAX_ID",
						"type": "nvarchar"
					},
					{
						"name": "ELIG_START_DATE",
						"type": "nvarchar"
					},
					{
						"name": "ELIG_END_DATE",
						"type": "nvarchar"
					},
					{
						"name": "DIAMOND_ID",
						"type": "nvarchar"
					},
					{
						"name": "ETHNIC_CODE_DESC",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RENDRCARENY_HIST_MEM_CAID"
				},
				"sqlPool": {
					"referenceName": "cpsqlpool",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/cpsqlpool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/MEMtest')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CareAbout SFTP",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "James/Zarchive"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "RENDRCARENY_202202_HIST_MEM_CAID.txt",
						"container": "data"
					},
					"columnDelimiter": "|",
					"rowDelimiter": "\n",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "COMPANY_CODE",
						"type": "String"
					},
					{
						"name": "LINE_OF_BUSINESS_DESC",
						"type": "String"
					},
					{
						"name": "MEDICAID_NO",
						"type": "String"
					},
					{
						"name": "MEDICARE_NO",
						"type": "String"
					},
					{
						"name": "SUBSCRIBER_ID",
						"type": "String"
					},
					{
						"name": "MEMB_FIRST_NAME",
						"type": "String"
					},
					{
						"name": "MEMB_MIDDLE_INITIAL",
						"type": "String"
					},
					{
						"name": "MEMB_LAST_NAME",
						"type": "String"
					},
					{
						"name": "GENDER",
						"type": "String"
					},
					{
						"name": "DOB",
						"type": "String"
					},
					{
						"name": "MEMB_ADDRESS_LINE_1",
						"type": "String"
					},
					{
						"name": "MEMB_ADDRESS_LINE_2",
						"type": "String"
					},
					{
						"name": "MEMB_CITY",
						"type": "String"
					},
					{
						"name": "MEMB_STATE",
						"type": "String"
					},
					{
						"name": "MEMB_ZIP",
						"type": "String"
					},
					{
						"name": "PROVIDER_ID",
						"type": "String"
					},
					{
						"name": "NATIONAL_PROVIDER_ID",
						"type": "String"
					},
					{
						"name": "MPIN",
						"type": "String"
					},
					{
						"name": "PROV_FULL_NAME",
						"type": "String"
					},
					{
						"name": "HOME_PHONE_NUMBER",
						"type": "String"
					},
					{
						"name": "IPRO_RISK_SCORE",
						"type": "String"
					},
					{
						"name": "PROV_TAX_ID",
						"type": "String"
					},
					{
						"name": "ELIG_START_DATE",
						"type": "String"
					},
					{
						"name": "ELIG_END_DATE",
						"type": "String"
					},
					{
						"name": "DIAMOND_ID",
						"type": "String"
					},
					{
						"name": "ETHNIC_CODE_DESC",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/CareAbout SFTP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PDFCDHfolder')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CareAbout SFTP",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "James/Zarchive"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "FIDELIS/dataFiles/DentalHeader",
						"container": "data"
					},
					"columnDelimiter": "|",
					"rowDelimiter": "\n",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/CareAbout SFTP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PDFCDLFolder')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "James/Zarchive"
				},
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "FileName",
						"type": "varchar"
					},
					{
						"name": "claim_id",
						"type": "nvarchar"
					},
					{
						"name": "claim_line",
						"type": "nvarchar"
					},
					{
						"name": "service_from_date",
						"type": "nvarchar"
					},
					{
						"name": "service_to_date",
						"type": "nvarchar"
					},
					{
						"name": "place_of_service",
						"type": "nvarchar"
					},
					{
						"name": "emergency_indicator",
						"type": "nvarchar"
					},
					{
						"name": "procedure_code",
						"type": "nvarchar"
					},
					{
						"name": "modifier_1",
						"type": "nvarchar"
					},
					{
						"name": "modifier_2",
						"type": "nvarchar"
					},
					{
						"name": "modifier_3",
						"type": "nvarchar"
					},
					{
						"name": "modifier_4",
						"type": "nvarchar"
					},
					{
						"name": "diagnosis_code_pointer",
						"type": "nvarchar"
					},
					{
						"name": "line_charge",
						"type": "nvarchar"
					},
					{
						"name": "billed_units",
						"type": "nvarchar"
					},
					{
						"name": "id_qualifier",
						"type": "nvarchar"
					},
					{
						"name": "provider_id",
						"type": "nvarchar"
					},
					{
						"name": "plan_paid",
						"type": "nvarchar"
					},
					{
						"name": "member_liability",
						"type": "nvarchar"
					},
					{
						"name": "allowed_amount",
						"type": "nvarchar"
					},
					{
						"name": "covered_units",
						"type": "nvarchar"
					},
					{
						"name": "member_responsibility",
						"type": "nvarchar"
					},
					{
						"name": "capitation_indicator",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "PAYOR_DATA",
					"table": "FidelisCare_DentalLine_stg"
				},
				"sqlPool": {
					"referenceName": "cpsqlpool",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/cpsqlpool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PDFC_DentalHeaderData1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CareAbout SFTP",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "James/Zarchive"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FidelisCare_Prod_DentalHeader_FULL_RENDRCARE_20190101_20220630.txt",
						"folderPath": "fidelis/FromCentene",
						"container": "rendrcaresftp"
					},
					"columnDelimiter": "|",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "claim_id|billing_provider_id|rendering_provider_id|first_date_of_service|last_date_of_service|member_id|patient_dob|patient_gender|patient_zip_code|line_of_business|product|blue_card_identifier|total_charge|allowed_amount|member_responsibility|plan_paid|icd_version|diagnosis_1|diagnosis_2|diagnosis_3|diagnosis_4|diagnosis_5|diagnosis_6|diagnosis_7|diagnosis_8|diagnosis_9|diagnosis_10|diagnosis_11|payment_methodology|source_system|primary_payer|adjustment_claim_indicator|adjusted_claim_id|employer_id|paid_date|posted_date|claim_status|denial_reason|member_pcp_id|member_pcp_id_npi",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/CareAbout SFTP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PDFC_DentalLineData1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CareAbout SFTP",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "James/Zarchive"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FidelisCare_Prod_DentalLine_FULL_RENDRCARE_20190101_20220630.txt",
						"folderPath": "fidelis/FromCentene",
						"container": "rendrcaresftp"
					},
					"columnDelimiter": "|",
					"rowDelimiter": "\n",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/CareAbout SFTP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PipelineDataflowDemo')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cpsynapsews-WorkspaceDefaultSqlServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "cpsqlpool"
					}
				},
				"folder": {
					"name": "James/Zarchive"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "claim_id",
						"type": "varchar"
					},
					{
						"name": "CountLine",
						"type": "int",
						"precision": 10
					},
					{
						"name": "loadedBy",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DemoDescription"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/cpsynapsews-WorkspaceDefaultSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PipelineDemo2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cpsynapsews-WorkspaceDefaultSqlServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "cpsqlpool"
					}
				},
				"folder": {
					"name": "James/Zarchive"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "varchar"
					},
					{
						"name": "LoadedBy",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DemoDescription2"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/cpsynapsews-WorkspaceDefaultSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SqlServer1CCMPatient')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "James/testImportSqlServer"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "PatientID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ClinicID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BillingStatus",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreateDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CCMStatus",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ModifyDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ImportVersion",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CCM_Patient"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_IP')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_cpazuredb_dnadata",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "James/zcode"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "claim_id",
						"type": "nvarchar"
					},
					{
						"name": "member_id",
						"type": "nvarchar"
					},
					{
						"name": "Year",
						"type": "nvarchar"
					},
					{
						"name": "DxCode",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ZIP"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_cpazuredb_dnadata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_MEM')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_cpazuredb_dnadata",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "James/zcode"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "member_id",
						"type": "nvarchar"
					},
					{
						"name": "Medicaid_Id",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ZMEM"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_cpazuredb_dnadata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_OP')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_cpazuredb_dnadata",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "James/zcode"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "claim_id",
						"type": "nvarchar"
					},
					{
						"name": "member_id",
						"type": "nvarchar"
					},
					{
						"name": "Year",
						"type": "nvarchar"
					},
					{
						"name": "DxCode",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ZOP"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_cpazuredb_dnadata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_PROF')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_cpazuredb_dnadata",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "James/zcode"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "claim_id",
						"type": "nvarchar"
					},
					{
						"name": "member_id",
						"type": "nvarchar"
					},
					{
						"name": "Year",
						"type": "nvarchar"
					},
					{
						"name": "DxCode",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ZPROF"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_cpazuredb_dnadata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_SINK')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_cpazuredb_dnadata",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "James/zcode"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "ZSINK"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_cpazuredb_dnadata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_ZCODECAT')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_cpazuredb_dnadata",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "James/zcode"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ZCode",
						"type": "varchar"
					},
					{
						"name": "SDOHCategory",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ZCODECAT"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_cpazuredb_dnadata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_ZFILTER')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_cpazuredb_dnadata",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "James/zcode"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "code",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ZFILTER"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_cpazuredb_dnadata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_ZROWC')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_cpazuredb_dnadata",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "James/zcode"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "ROWCONT",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ZROWC"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_cpazuredb_dnadata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_adls_azstoragepwyjd_Employees')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_adls_azstoragepwyjd",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "training_data/Employees",
						"fileSystem": "training"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_adls_azstoragepwyjd')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_adls_azstoragepwyjd_InputEmp')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_adls_azstoragepwyjd",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "inputEmp.txt",
						"folderPath": "training_data/Employees",
						"fileSystem": "training"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "\"FirstName\"|\"LastName\"",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_adls_azstoragepwyjd')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_adls_azstoragepwyjd_InternetSales')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_adls_azstoragepwyjd",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "training_data/FactInternetSales",
						"fileSystem": "training"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_adls_azstoragepwyjd')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_adls_azstoragepwyjd_ProductList')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_adls_azstoragepwyjd",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"directory": {
						"type": "string",
						"defaultValue": "ph"
					},
					"filename": {
						"type": "string",
						"defaultValue": "ph"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().filename,\n\n'List_',\n\nsubstring( convertFromUtc(utcNow(), 'Eastern Standard Time'),0,10),\n\n'.csv'\n\n)",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('training_output/',dataset().directory)",
							"type": "Expression"
						},
						"fileSystem": "training"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_adls_azstoragepwyjd')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_adls_azstoragepwyjd_Products')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_adls_azstoragepwyjd",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ProductList.csv",
						"folderPath": "training_output",
						"fileSystem": "training"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_adls_azstoragepwyjd')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_adls_azstoragepwyjd_SalesNew')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_adls_azstoragepwyjd",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SalesNew.csv",
						"folderPath": "training_data/FactInternetSales",
						"fileSystem": "training"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_adls_azstoragepwyjd')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_adls_azstoragepwyjd_dynamic')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_adls_azstoragepwyjd",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"directory": {
						"type": "string",
						"defaultValue": "ph"
					},
					"filename": {
						"type": "string",
						"defaultValue": "ph"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().directory",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_adls_azstoragepwyjd')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_adls_azstorageyjd_FactSales')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_adls_azstoragepwyjd",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "InternetSales.snappy.parquet",
						"folderPath": "training_data",
						"fileSystem": "training"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "ProductKey",
						"type": "INT32"
					},
					{
						"name": "OrderDateKey",
						"type": "INT32"
					},
					{
						"name": "DueDateKey",
						"type": "INT32"
					},
					{
						"name": "ShipDateKey",
						"type": "INT32"
					},
					{
						"name": "CustomerKey",
						"type": "INT32"
					},
					{
						"name": "PromotionKey",
						"type": "INT32"
					},
					{
						"name": "CurrencyKey",
						"type": "INT32"
					},
					{
						"name": "SalesTerritoryKey",
						"type": "INT32"
					},
					{
						"name": "SalesOrderNumber",
						"type": "UTF8"
					},
					{
						"name": "SalesOrderLineNumber",
						"type": "INT32"
					},
					{
						"name": "RevisionNumber",
						"type": "INT32"
					},
					{
						"name": "OrderQuantity",
						"type": "INT32"
					},
					{
						"name": "UnitPrice",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ExtendedAmount",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "UnitPriceDiscountPct",
						"type": "DOUBLE"
					},
					{
						"name": "DiscountAmount",
						"type": "DOUBLE"
					},
					{
						"name": "ProductStandardCost",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalProductCost",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "SalesAmount",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TaxAmt",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Freight",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "CarrierTrackingNumber",
						"type": "UTF8"
					},
					{
						"name": "CustomerPONumber",
						"type": "UTF8"
					},
					{
						"name": "OrderDate",
						"type": "INT96"
					},
					{
						"name": "DueDate",
						"type": "INT96"
					},
					{
						"name": "ShipDate",
						"type": "INT96"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_adls_azstoragepwyjd')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_blob_CASFTP_dynamic')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CareAbout SFTP",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string",
						"defaultValue": "ph"
					},
					"directory": {
						"type": "string",
						"defaultValue": "ph"
					},
					"fileName": {
						"type": "string",
						"defaultValue": "ph"
					}
				},
				"folder": {
					"name": "James/dynamic"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/CareAbout SFTP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_blob_dataFile_dynamic')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CareAbout SFTP",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"directory": {
						"type": "string",
						"defaultValue": "ph"
					},
					"fileName": {
						"type": "string",
						"defaultValue": "ph"
					}
				},
				"folder": {
					"name": "James/azImportFromFolder"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						},
						"container": "data"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/CareAbout SFTP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_blob_dataFolder_dynamic')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CareAbout SFTP",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"directory": {
						"type": "string",
						"defaultValue": "ph"
					}
				},
				"folder": {
					"name": "James/azImportFromFolder"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						},
						"container": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/CareAbout SFTP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_sql_AdventureWorksDW_Dynamic')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_AdventureWorksDW",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string",
						"defaultValue": "ph"
					},
					"tablename": {
						"type": "string",
						"defaultValue": "ph"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_AdventureWorksDW')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_sql_AdventureWorksDW_InternetSales')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_AdventureWorksDW",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderDateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DueDateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShipDateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PromotionKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrencyKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesTerritoryKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesOrderNumber",
						"type": "varchar"
					},
					{
						"name": "SalesOrderLineNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "RevisionNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OrderQuantity",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "UnitPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ExtendedAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "UnitPriceDiscountPct",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DiscountAmount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ProductStandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalProductCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "SalesAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TaxAmt",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "CarrierTrackingNumber",
						"type": "varchar"
					},
					{
						"name": "CustomerPONumber",
						"type": "varchar"
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DueDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShipDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FactInternetSales"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_AdventureWorksDW')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_sql_AdventureWorksLT_InternetSales')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_AdventureWorksLT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "InternetSales"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_AdventureWorksLT')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_sql_AdventureWorksLT_Products')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_AdventureWorksLT",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string",
						"defaultValue": "ph"
					},
					"tablename": {
						"type": "string",
						"defaultValue": "ph"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ProductNumber",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SellStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SellEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DiscontinuedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ThumbNailPhoto",
						"type": "varbinary"
					},
					{
						"name": "ThumbnailPhotoFileName",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_AdventureWorksLT')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_sql_dnadataTbl_dynamic')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_cpazuredb_dnadata",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string",
						"defaultValue": "ph"
					},
					"tableName": {
						"type": "string",
						"defaultValue": "ph"
					}
				},
				"folder": {
					"name": "James/dynamic"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_cpazuredb_dnadata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_sql_dnadata_db')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_cpazuredb_dnadata",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "James/azImportFromFolder"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_cpazuredb_dnadata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_sql_dnadata_dynamic')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_cpazuredb_dnadata",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string",
						"defaultValue": "ph"
					},
					"tableName": {
						"type": "string",
						"defaultValue": "ph"
					}
				},
				"folder": {
					"name": "James/azImportFromFolder"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_cpazuredb_dnadata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_sqlpool_DedicatedP1_SalesByProductYJD')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az-synapse-bootcamp-yjd-WorkspaceDefaultSqlServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "DedicatedP1"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "SalesByProductYJD"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az-synapse-bootcamp-yjd-WorkspaceDefaultSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_sqlpool_InternetSales')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az-synapse-bootcamp-yjd-WorkspaceDefaultSqlServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "DedicatedP1"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "InternetSales"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az-synapse-bootcamp-yjd-WorkspaceDefaultSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_sqlpool_PDFCDH_Tbl')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "James/Zarchive"
				},
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "FileName",
						"type": "varchar"
					},
					{
						"name": "claim_id",
						"type": "varchar"
					},
					{
						"name": "billing_provider_id",
						"type": "varchar"
					},
					{
						"name": "rendering_provider_id",
						"type": "varchar"
					},
					{
						"name": "first_date_of_service",
						"type": "varchar"
					},
					{
						"name": "last_date_of_service",
						"type": "varchar"
					},
					{
						"name": "member_id",
						"type": "varchar"
					},
					{
						"name": "patient_dob",
						"type": "varchar"
					},
					{
						"name": "patient_gender",
						"type": "varchar"
					},
					{
						"name": "patient_zip_code",
						"type": "varchar"
					},
					{
						"name": "line_of_business",
						"type": "varchar"
					},
					{
						"name": "product",
						"type": "varchar"
					},
					{
						"name": "blue_card_identifier",
						"type": "varchar"
					},
					{
						"name": "total_charge",
						"type": "varchar"
					},
					{
						"name": "allowed_amount",
						"type": "varchar"
					},
					{
						"name": "member_responsibility",
						"type": "varchar"
					},
					{
						"name": "plan_paid",
						"type": "varchar"
					},
					{
						"name": "icd_version",
						"type": "varchar"
					},
					{
						"name": "diagnosis_1",
						"type": "varchar"
					},
					{
						"name": "diagnosis_2",
						"type": "varchar"
					},
					{
						"name": "diagnosis_3",
						"type": "varchar"
					},
					{
						"name": "diagnosis_4",
						"type": "varchar"
					},
					{
						"name": "diagnosis_5",
						"type": "varchar"
					},
					{
						"name": "diagnosis_6",
						"type": "varchar"
					},
					{
						"name": "diagnosis_7",
						"type": "varchar"
					},
					{
						"name": "diagnosis_8",
						"type": "varchar"
					},
					{
						"name": "diagnosis_9",
						"type": "varchar"
					},
					{
						"name": "diagnosis_10",
						"type": "varchar"
					},
					{
						"name": "diagnosis_11",
						"type": "varchar"
					},
					{
						"name": "payment_methodology",
						"type": "varchar"
					},
					{
						"name": "source_system",
						"type": "varchar"
					},
					{
						"name": "primary_payer",
						"type": "varchar"
					},
					{
						"name": "adjustment_claim_indicator",
						"type": "varchar"
					},
					{
						"name": "adjusted_claim_id",
						"type": "varchar"
					},
					{
						"name": "employer_id",
						"type": "varchar"
					},
					{
						"name": "paid_date",
						"type": "varchar"
					},
					{
						"name": "posted_date",
						"type": "varchar"
					},
					{
						"name": "claim_status",
						"type": "varchar"
					},
					{
						"name": "denial_reason",
						"type": "varchar"
					},
					{
						"name": "member_pcp_id",
						"type": "varchar"
					},
					{
						"name": "member_pcp_id_npi",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "PAYOR_DATA",
					"table": "FidelisCare_DentalHeader_stg"
				},
				"sqlPool": {
					"referenceName": "cpsqlpool",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/cpsqlpool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_sqlpool_PDFCDL_Tbl')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "James/Zarchive"
				},
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "FileName",
						"type": "varchar"
					},
					{
						"name": "claim_id",
						"type": "varchar"
					},
					{
						"name": "claim_line",
						"type": "varchar"
					},
					{
						"name": "service_from_date",
						"type": "varchar"
					},
					{
						"name": "service_to_date",
						"type": "varchar"
					},
					{
						"name": "place_of_service",
						"type": "varchar"
					},
					{
						"name": "emergency_indicator",
						"type": "varchar"
					},
					{
						"name": "procedure_code",
						"type": "varchar"
					},
					{
						"name": "modifier_1",
						"type": "varchar"
					},
					{
						"name": "modifier_2",
						"type": "varchar"
					},
					{
						"name": "modifier_3",
						"type": "varchar"
					},
					{
						"name": "modifier_4",
						"type": "varchar"
					},
					{
						"name": "diagnosis_code_pointer",
						"type": "varchar"
					},
					{
						"name": "line_charge",
						"type": "varchar"
					},
					{
						"name": "billed_units",
						"type": "varchar"
					},
					{
						"name": "id_qualifier",
						"type": "varchar"
					},
					{
						"name": "provider_id",
						"type": "varchar"
					},
					{
						"name": "plan_paid",
						"type": "varchar"
					},
					{
						"name": "member_liability",
						"type": "varchar"
					},
					{
						"name": "allowed_amount",
						"type": "varchar"
					},
					{
						"name": "covered_units",
						"type": "varchar"
					},
					{
						"name": "member_responsibility",
						"type": "varchar"
					},
					{
						"name": "capitation_indicator",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "PAYOR_DATA",
					"table": "FidelisCare_DentalLine_stg"
				},
				"sqlPool": {
					"referenceName": "cpsqlpool",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/cpsqlpool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/destTestCCMPatient')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_cpazuredb_dnadata",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "James/testImportSqlServer"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PatientID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ClinicID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BillingStatus",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreateDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CCMStatus",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ModifyDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ImportVersion",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CCM_Patient"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/az_sql_cpazuredb_dnadata')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CareAbout SFTP')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('CareAbout SFTP_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/RendrCarePop')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('RendrCarePop_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SqlServer1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SelfHosted",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/SelfHosted')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az-synapse-bootcamp-yjd-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('az-synapse-bootcamp-yjd-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az-synapse-bootcamp-yjd-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('az-synapse-bootcamp-yjd-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_adls_azstoragepwyjd')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('az_adls_azstoragepwyjd_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('az_adls_azstoragepwyjd_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_sql_AdventureWorksDW')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('az_sql_AdventureWorksDW_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_sql_AdventureWorksLT')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('az_sql_AdventureWorksLT_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_sql_cpazuredb_dnadata')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('az_sql_cpazuredb_dnadata_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_sql_cpazuredb_dnadata_dev')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('az_sql_cpazuredb_dnadata_dev_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/az_sql_cpazuredb_dnadata_test')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('az_sql_cpazuredb_dnadata_test_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/azsynwsyjd-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('azsynwsyjd-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/azsynwsyjd-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('azsynwsyjd-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/cpsynapsews-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('cpsynapsews-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/cpsynapsews-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('cpsynapsews-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SelfHosted')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dataflow1')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "James"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ASA_PD_FC_DentalHeader_Tbl",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "ASA_PD_FC_DemtalLine_Tbl",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "PipelineDataflowDemo",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "PipelineDemo2",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "derivedColumn3"
						},
						{
							"name": "filter1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          FileName as string,",
						"          claim_id as string,",
						"          billing_provider_id as string,",
						"          rendering_provider_id as string,",
						"          first_date_of_service as string,",
						"          last_date_of_service as string,",
						"          member_id as string,",
						"          patient_dob as string,",
						"          patient_gender as string,",
						"          patient_zip_code as string,",
						"          line_of_business as string,",
						"          product as string,",
						"          blue_card_identifier as string,",
						"          total_charge as string,",
						"          allowed_amount as string,",
						"          member_responsibility as string,",
						"          plan_paid as string,",
						"          icd_version as string,",
						"          diagnosis_1 as string,",
						"          diagnosis_2 as string,",
						"          diagnosis_3 as string,",
						"          diagnosis_4 as string,",
						"          diagnosis_5 as string,",
						"          diagnosis_6 as string,",
						"          diagnosis_7 as string,",
						"          diagnosis_8 as string,",
						"          diagnosis_9 as string,",
						"          diagnosis_10 as string,",
						"          diagnosis_11 as string,",
						"          payment_methodology as string,",
						"          source_system as string,",
						"          primary_payer as string,",
						"          adjustment_claim_indicator as string,",
						"          adjusted_claim_id as string,",
						"          employer_id as string,",
						"          paid_date as string,",
						"          posted_date as string,",
						"          claim_status as string,",
						"          denial_reason as string,",
						"          member_pcp_id as string,",
						"          member_pcp_id_npi as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table',",
						"     staged: true) ~> source1",
						"source(output(",
						"          FileName as string,",
						"          claim_id as string,",
						"          claim_line as string,",
						"          service_from_date as string,",
						"          service_to_date as string,",
						"          place_of_service as string,",
						"          emergency_indicator as string,",
						"          procedure_code as string,",
						"          modifier_1 as string,",
						"          modifier_2 as string,",
						"          modifier_3 as string,",
						"          modifier_4 as string,",
						"          diagnosis_code_pointer as string,",
						"          line_charge as string,",
						"          billed_units as string,",
						"          id_qualifier as string,",
						"          provider_id as string,",
						"          plan_paid as string,",
						"          member_liability as string,",
						"          allowed_amount as string,",
						"          covered_units as string,",
						"          member_responsibility as string,",
						"          capitation_indicator as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table',",
						"     staged: true) ~> source2",
						"source1, source2 join(source1@claim_id == source2@claim_id,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"filter1 select(mapColumn(",
						"          each(match(true()))",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 derive(Description = concat(\r",
						"    'Member, ',\r",
						"    claim_id,\r",
						"    ', visited ',\r",
						"    place_of_service,\r",
						"    ' on ',\r",
						"    first_date_of_service\r",
						")) ~> derivedColumn1",
						"derivedColumn1 aggregate(groupBy(claim_id),",
						"     CountLine = count()) ~> aggregate1",
						"aggregate1 derive(LoadedBy = 'DF') ~> derivedColumn2",
						"derivedColumn1 derive(LoadedBy = 'DF') ~> derivedColumn3",
						"join1 filter(left(member_id,2) == '1') ~> filter1",
						"derivedColumn2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          claim_id as string,",
						"          CountLine as integer,",
						"          loadedBy as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
						"derivedColumn3 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as integer,",
						"          Description as string,",
						"          LoadedBy as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ASA_PD_FC_DentalHeader_Tbl')]",
				"[concat(variables('workspaceId'), '/datasets/ASA_PD_FC_DemtalLine_Tbl')]",
				"[concat(variables('workspaceId'), '/datasets/PipelineDataflowDemo')]",
				"[concat(variables('workspaceId'), '/datasets/PipelineDemo2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PDFCDentalHeader')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "James"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ASA_PD_FC_DentalHeader_Data",
								"type": "DatasetReference"
							},
							"name": "PDFCDentalHeader"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ASA_PD_FC_DentalHeader_Tbl",
								"type": "DatasetReference"
							},
							"name": "PDFCDentalHeaderTbl"
						}
					],
					"transformations": [],
					"scriptLines": [
						"parameters{",
						"     FileName as string",
						"}",
						"source(output(",
						"          claim_id as string,",
						"          billing_provider_id as string,",
						"          rendering_provider_id as string,",
						"          first_date_of_service as string,",
						"          last_date_of_service as string,",
						"          member_id as string,",
						"          patient_dob as string,",
						"          patient_gender as string,",
						"          patient_zip_code as string,",
						"          line_of_business as string,",
						"          product as string,",
						"          blue_card_identifier as string,",
						"          total_charge as string,",
						"          allowed_amount as string,",
						"          member_responsibility as string,",
						"          plan_paid as string,",
						"          icd_version as string,",
						"          diagnosis_1 as string,",
						"          diagnosis_2 as string,",
						"          diagnosis_3 as string,",
						"          diagnosis_4 as string,",
						"          diagnosis_5 as string,",
						"          diagnosis_6 as string,",
						"          diagnosis_7 as string,",
						"          diagnosis_8 as string,",
						"          diagnosis_9 as string,",
						"          diagnosis_10 as string,",
						"          diagnosis_11 as string,",
						"          payment_methodology as string,",
						"          source_system as string,",
						"          primary_payer as string,",
						"          adjustment_claim_indicator as string,",
						"          adjusted_claim_id as string,",
						"          employer_id as string,",
						"          paid_date as string,",
						"          posted_date as string,",
						"          claim_status as string,",
						"          denial_reason as string,",
						"          member_pcp_id as string,",
						"          member_pcp_id_npi as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     rowUrlColumn: 'FileName') ~> PDFCDentalHeader",
						"PDFCDentalHeader sink(allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     input(",
						"          FileName as string,",
						"          claim_id as string,",
						"          billing_provider_id as string,",
						"          rendering_provider_id as string,",
						"          first_date_of_service as string,",
						"          last_date_of_service as string,",
						"          member_id as string,",
						"          patient_dob as string,",
						"          patient_gender as string,",
						"          patient_zip_code as string,",
						"          line_of_business as string,",
						"          product as string,",
						"          blue_card_identifier as string,",
						"          total_charge as string,",
						"          allowed_amount as string,",
						"          member_responsibility as string,",
						"          plan_paid as string,",
						"          icd_version as string,",
						"          diagnosis_1 as string,",
						"          diagnosis_2 as string,",
						"          diagnosis_3 as string,",
						"          diagnosis_4 as string,",
						"          diagnosis_5 as string,",
						"          diagnosis_6 as string,",
						"          diagnosis_7 as string,",
						"          diagnosis_8 as string,",
						"          diagnosis_9 as string,",
						"          diagnosis_10 as string,",
						"          diagnosis_11 as string,",
						"          payment_methodology as string,",
						"          source_system as string,",
						"          primary_payer as string,",
						"          adjustment_claim_indicator as string,",
						"          adjusted_claim_id as string,",
						"          employer_id as string,",
						"          paid_date as string,",
						"          posted_date as string,",
						"          claim_status as string,",
						"          denial_reason as string,",
						"          member_pcp_id as string,",
						"          member_pcp_id_npi as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     batchSize: 5000,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          FileName,",
						"          claim_id,",
						"          billing_provider_id,",
						"          rendering_provider_id,",
						"          first_date_of_service,",
						"          last_date_of_service,",
						"          member_id,",
						"          patient_dob,",
						"          patient_gender,",
						"          patient_zip_code,",
						"          line_of_business,",
						"          product,",
						"          blue_card_identifier,",
						"          total_charge,",
						"          allowed_amount,",
						"          member_responsibility,",
						"          plan_paid,",
						"          icd_version,",
						"          diagnosis_1,",
						"          diagnosis_2,",
						"          diagnosis_3,",
						"          diagnosis_4,",
						"          diagnosis_5,",
						"          diagnosis_6,",
						"          diagnosis_7,",
						"          diagnosis_8,",
						"          diagnosis_9,",
						"          diagnosis_10,",
						"          diagnosis_11,",
						"          payment_methodology,",
						"          source_system,",
						"          primary_payer,",
						"          adjustment_claim_indicator,",
						"          adjusted_claim_id,",
						"          employer_id,",
						"          paid_date,",
						"          posted_date,",
						"          claim_status,",
						"          denial_reason,",
						"          member_pcp_id,",
						"          member_pcp_id_npi",
						"     )) ~> PDFCDentalHeaderTbl"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ASA_PD_FC_DentalHeader_Data')]",
				"[concat(variables('workspaceId'), '/datasets/ASA_PD_FC_DentalHeader_Tbl')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SalesByProductYJD')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "az_adls_azstorageyjd_FactSales",
								"type": "DatasetReference"
							},
							"name": "InternetSales"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "az_sqlpool_DedicatedP1_SalesByProductYJD",
								"type": "DatasetReference"
							},
							"name": "LoadSalesByProduct"
						}
					],
					"transformations": [
						{
							"name": "SalesByProduct"
						},
						{
							"name": "RankProductBySales"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ProductKey as integer,",
						"          OrderDateKey as integer,",
						"          DueDateKey as integer,",
						"          ShipDateKey as integer,",
						"          CustomerKey as integer,",
						"          PromotionKey as integer,",
						"          CurrencyKey as integer,",
						"          SalesTerritoryKey as integer,",
						"          SalesOrderNumber as string,",
						"          SalesOrderLineNumber as integer,",
						"          RevisionNumber as integer,",
						"          OrderQuantity as integer,",
						"          UnitPrice as decimal(19,4),",
						"          ExtendedAmount as decimal(19,4),",
						"          UnitPriceDiscountPct as double,",
						"          DiscountAmount as double,",
						"          ProductStandardCost as decimal(19,4),",
						"          TotalProductCost as decimal(19,4),",
						"          SalesAmount as decimal(19,4),",
						"          TaxAmt as decimal(19,4),",
						"          Freight as decimal(19,4),",
						"          CarrierTrackingNumber as string,",
						"          CustomerPONumber as string,",
						"          OrderDate as timestamp,",
						"          DueDate as timestamp,",
						"          ShipDate as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> InternetSales",
						"InternetSales aggregate(groupBy(ProductKey),",
						"     TotalSales = sum(SalesAmount)) ~> SalesByProduct",
						"SalesByProduct rank(desc(TotalSales, true),",
						"     output(ProductRank as long)) ~> RankProductBySales",
						"RankProductBySales sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> LoadSalesByProduct"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/az_adls_azstorageyjd_FactSales')]",
				"[concat(variables('workspaceId'), '/datasets/az_sqlpool_DedicatedP1_SalesByProductYJD')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ZCODE')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "James"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "az_IP",
								"type": "DatasetReference"
							},
							"name": "IP"
						},
						{
							"dataset": {
								"referenceName": "az_OP",
								"type": "DatasetReference"
							},
							"name": "OP"
						},
						{
							"dataset": {
								"referenceName": "az_PROF",
								"type": "DatasetReference"
							},
							"name": "PROF"
						},
						{
							"dataset": {
								"referenceName": "az_MEM",
								"type": "DatasetReference"
							},
							"name": "MEM"
						},
						{
							"dataset": {
								"referenceName": "az_ZFILTER",
								"type": "DatasetReference"
							},
							"name": "ZFILTER"
						},
						{
							"dataset": {
								"referenceName": "az_ZCODECAT",
								"type": "DatasetReference"
							},
							"name": "ZCODECAT"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "az_SINK",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "az_ZROWC",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"dataset": {
								"referenceName": "az_ZROWC",
								"type": "DatasetReference"
							},
							"name": "sink3"
						},
						{
							"dataset": {
								"referenceName": "az_ZROWC",
								"type": "DatasetReference"
							},
							"name": "sink4"
						},
						{
							"dataset": {
								"referenceName": "az_ZROWC",
								"type": "DatasetReference"
							},
							"name": "sink5"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "union1"
						},
						{
							"name": "derivedColumn3"
						},
						{
							"name": "union2"
						},
						{
							"name": "join1"
						},
						{
							"name": "derivedColumn4"
						},
						{
							"name": "join2"
						},
						{
							"name": "join3"
						},
						{
							"name": "derivedColumn5"
						},
						{
							"name": "select1"
						},
						{
							"name": "RC2"
						},
						{
							"name": "RC3"
						},
						{
							"name": "RC4"
						},
						{
							"name": "RC1"
						},
						{
							"name": "derivedColumn6"
						},
						{
							"name": "derivedColumn7"
						},
						{
							"name": "derivedColumn8"
						},
						{
							"name": "derivedColumn9"
						}
					],
					"scriptLines": [
						"source(output(",
						"          claim_id as string,",
						"          member_id as string,",
						"          Year as string,",
						"          DxCode as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> IP",
						"source(output(",
						"          claim_id as string,",
						"          member_id as string,",
						"          Year as string,",
						"          DxCode as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> OP",
						"source(output(",
						"          claim_id as string,",
						"          member_id as string,",
						"          Year as string,",
						"          DxCode as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> PROF",
						"source(output(",
						"          member_id as string,",
						"          Medicaid_Id as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> MEM",
						"source(output(",
						"          code as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ZFILTER",
						"source(output(",
						"          ZCode as string,",
						"          SDOHCategory as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ZCODECAT",
						"IP derive(source = \"IP\") ~> derivedColumn1",
						"OP derive(source = \"OP\") ~> derivedColumn2",
						"derivedColumn1, derivedColumn3 union(byName: true)~> union1",
						"PROF derive(source = \"PROF\") ~> derivedColumn3",
						"union1, derivedColumn2 union(byName: true)~> union2",
						"union2, MEM join(union2@member_id == MEM@member_id,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 derive(left4 = left(DxCode,4)) ~> derivedColumn4",
						"derivedColumn4, ZFILTER join(left4 == code,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join2",
						"derivedColumn5, ZCODECAT join(left3 == ZCode,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join3",
						"join2 derive(left3 = left(left4,3)) ~> derivedColumn5",
						"join3 select(mapColumn(",
						"          Medicaid_Id,",
						"          claim_id,",
						"          Year,",
						"          DxCode,",
						"          code,",
						"          SDOHCategory,",
						"          claim_type = source",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"join1 aggregate(RowCont = count()) ~> RC2",
						"join2 aggregate(RowCont = count()) ~> RC3",
						"join3 aggregate(RowCont = count()) ~> RC4",
						"union2 aggregate(RowCont = count()) ~> RC1",
						"RC1 derive(Name = \"RC1\") ~> derivedColumn6",
						"RC2 derive(Name = \"RC2\") ~> derivedColumn7",
						"RC3 derive(Name = \"RC3\") ~> derivedColumn8",
						"RC4 derive(Name = \"RC4\") ~> derivedColumn9",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Medicaid_Id,",
						"          claim_id,",
						"          claim_type,",
						"          Year,",
						"          DxCode,",
						"          code,",
						"          SDOHCategory",
						"     )) ~> sink1",
						"derivedColumn6 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Name as string,",
						"          ROWCONT as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Name,",
						"          ROWCONT = RowCont",
						"     )) ~> sink2",
						"derivedColumn7 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Name as string,",
						"          ROWCONT as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Name,",
						"          ROWCONT = RowCont",
						"     )) ~> sink3",
						"derivedColumn8 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Name as string,",
						"          ROWCONT as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Name,",
						"          ROWCONT = RowCont",
						"     )) ~> sink4",
						"derivedColumn9 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Name as string,",
						"          ROWCONT as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Name,",
						"          ROWCONT = RowCont",
						"     )) ~> sink5"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/az_IP')]",
				"[concat(variables('workspaceId'), '/datasets/az_OP')]",
				"[concat(variables('workspaceId'), '/datasets/az_PROF')]",
				"[concat(variables('workspaceId'), '/datasets/az_MEM')]",
				"[concat(variables('workspaceId'), '/datasets/az_ZFILTER')]",
				"[concat(variables('workspaceId'), '/datasets/az_ZCODECAT')]",
				"[concat(variables('workspaceId'), '/datasets/az_SINK')]",
				"[concat(variables('workspaceId'), '/datasets/az_ZROWC')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/03_Lab_CETAS_FromExternalTable')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE EXTERNAL FILE FORMAT [Parquet_yjd] \n    WITH ( FORMAT_TYPE = PARQUET)\nGO\n \nCREATE EXTERNAL DATA SOURCE [ADLSRoot_yjd] \n    WITH (\n        LOCATION   = 'https://azstoragepwyjd.dfs.core.windows.net/'\n    )\nGO\n \nCREATE EXTERNAL TABLE serverless.dbo.HolidayDataExtyjd\n   WITH(\n       LOCATION = 'training/training_output/HolidayDatayjd',\n     DATA_SOURCE = [ADLSRoot_yjd],\n     FILE_FORMAT = [Parquet_yjd]\n    )\n    AS \n       SELECT \n            * \n       FROM \n            serverless.dbo.HolidayDatayjd\n \n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "serverless",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/03_Lab_CETAS_FromOpenrowset')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "/*\n\tThe external resources of your DataSource and File_Format were created in the previous lab and do not need to be\n\tcreated again. Most of the time you will leverage already created objects in your database \n\trather than recreating them.\n\n\tYou will see where to find these resources later in this lab.\n*/\n\nCREATE EXTERNAL TABLE serverless.dbo.HolidayDataExt_yjd\n   WITH(\n       LOCATION = 'training/training_output/HolidaysByCountry_yjd', -- Folder to load the data to.\n     DATA_SOURCE = [ADLSRoot_yjd],\n     FILE_FORMAT = [Parquet_yjd]\n    )\n    AS \n       SELECT\n            CountryOrRegion,\n            COUNT(*) AS TotalHolidayCount\n        FROM\n            OPENROWSET(\n                BULK 'https://azstoragepwyjd.dfs.core.windows.net/training/training_data/Holiday.snappy.parquet',\n                FORMAT='PARQUET'\n            ) AS [result]\n        GROUP BY CountryOrRegion\n        ORDER BY TotalHolidayCount DESC\n        GO\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab03B1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "LabSQL"
				},
				"content": {
					"query": "-- This is auto-generated code\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://azstoragepwyjd.dfs.core.windows.net/training/training_data/Holiday.snappy.parquet',\n        FORMAT = 'PARQUET'\n    ) AS [result]\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab03B2')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "LabSQL"
				},
				"content": {
					"query": "SELECT\n    countryOrRegion AS Country, holidayName AS Holiday, date\nFROM\n    OPENROWSET(\n        BULK 'https://azstoragepwyjd.dfs.core.windows.net/training/training_data/Holiday.snappy.parquet',\n        FORMAT = 'PARQUET'\n    ) AS [result]\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Lab03D')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'training_azstoragepwyjd_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [training_azstoragepwyjd_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://training@azstoragepwyjd.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE HolidayDatayjd (\n\t[countryOrRegion] nvarchar(4000),\n\t[holidayName] nvarchar(4000),\n\t[normalizeHolidayName] nvarchar(4000),\n\t[isPaidTimeOff] bit,\n\t[countryRegionCode] nvarchar(4000),\n\t[date] datetime2(7)\n\t)\n\tWITH (\n\tLOCATION = 'training_data/Holiday.snappy.parquet',\n\tDATA_SOURCE = [training_azstoragepwyjd_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM dbo.HolidayDatayjd\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "serverless",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/demoDescription')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "select count(*) from [PAYOR_DATA].[FidelisCare_DentalLine_stg]\nselect count(*) from [PAYOR_DATA].[FidelisCare_DentalHeader_stg]\n\nselect count(distinct claim_id) from [PAYOR_DATA].[FidelisCare_DentalLine_stg]\nselect count(distinct claim_id) from [PAYOR_DATA].[FidelisCare_DentalHeader_stg]\n\nselect count(*), count(distinct l.claim_id)\nfrom [PAYOR_DATA].[FidelisCare_DentalLine_stg] l\njoin [PAYOR_DATA].[FidelisCare_DentalHeader_stg] h\non h.claim_id = l.claim_id\n\n\nselect count(*) from  DemoDescription \nselect count(*) from  DemoDescription2 \n\n\nselect top 1000 * from DemoDescription where LoadedBy <> 'SP'\n\n\n\n/*\n\ndrop table DemoDescription ;\ncreate table DemoDescription (claim_id varchar(50), CountLine int, loadedBy varchar(20))\ndrop table DemoDescription2 ;\ncreate table DemoDescription2 (id int identity(1,1), Description varchar(255), LoadedBy varchar(20))\n\n\n\nalter proc demoLoadTransform AS\nbegin\n\ninsert [DemoDescription] (claim_id, CountLine, LoadedBy)\nselect claim_id, CountCLM, 'SP' from (\nselect l.claim_id , count(*) as CountCLM\nfrom [PAYOR_DATA].[FidelisCare_DentalLine_stg] l\njoin [PAYOR_DATA].[FidelisCare_DentalHeader_stg] h\non h.claim_id = l.claim_id\ngroup by l.claim_id ) t\n\ninsert [DemoDescription2] (description, LoadedBy)\nselect 'Member, ' + h.[member_id] + ' visited ' + isnull(l.place_of_service,'pos') + ' on ' + l.service_from_date, 'SP'\nfrom [PAYOR_DATA].[FidelisCare_DentalLine_stg] l\njoin [PAYOR_DATA].[FidelisCare_DentalHeader_stg] h\non h.claim_id = l.claim_id\n\n\nend\n\n\n*/\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "cpsqlpool",
						"poolName": "cpsqlpool"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/demoParkQuery')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- This is auto-generated code\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://cpdlstorage.dfs.core.windows.net/cpdlfilesystem/demoPark/**',\n        FORMAT = 'PARQUET'\n    ) AS [result]\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dnaImportSetup')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- drop table azconfig\n-- create table azconfig (code varchar(10), active char(1), directory varchar(100), schemaName varchar(25), tableName varchar(50), stg_tableName varchar(50));\n\n-- Insert azconfig (code, active, directory, schemaName, tableName, stg_tableName)\n-- values ('FCDH','0','FIDELIS/dataFiles/DentalHeader','dbo','FidelisRendrDentalHeader','stg_FidelisRendrDentalHeader')\n-- ,('FCDL','0','FIDELIS/dataFiles/DentalLine','dbo','FidelisRendrDentalLine','stg_FidelisRendrDentalLine')\n-- ,('FCIPH','0','FIDELIS/dataFiles/IPClaimHeader','dbo','FidelisRendrIPClaimHeader','stg_FidelisRendrIPClaimHeader')\n-- ,('FCIPL','0','FIDELIS/dataFiles/IPClaimLine','dbo','FidelisRendrIPClaimLine','stg_FidelisRendrIPClaimLine')\n-- ,('FCMEMPCP','1','FIDELIS/dataFiles/MemberPCP','dbo','FidelisRendrMemberPCP','stg_FidelisRendrMemberPCP')\n\n-- select * from azconfig\n\n-- create table azlog (id int identity(1,1), loadedFile varchar(150), LoadedOn datetime)\n-- insert azlog (loadedFile, LoadedOn)\n-- select distinct filePath, getdate() from stg_FidelisRendrIPClaimLine\n\nselect * from azlog\n\nselect name from sys.tables\n\nselect count(*) , filePath from stg_FidelisRendrIPClaimLine group by filePath\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Notebook 1')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "cpsparkpool",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "56g",
					"driverCores": 8,
					"executorMemory": "56g",
					"executorCores": 8,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "f46c694a-9ad9-4564-b924-f5a342bd333c"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/dea20f13-b8a2-4c09-9cfe-b902ec798126/resourceGroups/AZR-SYNAPSE-RG/providers/Microsoft.Synapse/workspaces/cpsynapsews/bigDataPools/cpsparkpool",
						"name": "cpsparkpool",
						"type": "Spark",
						"endpoint": "https://cpsynapsews.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/cpsparkpool",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net",
							"authHeader": null
						},
						"sparkVersion": "3.1",
						"nodeCount": 3,
						"cores": 8,
						"memory": 56,
						"extraHeader": null
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "python"
							}
						},
						"source": [
							"%%pyspark\n",
							"spark.sql(\"CREATE TABLE IF NOT EXISTS default.demoApache USING Parquet LOCATION 'abfss://cpdlfilesystem@cpdlstorage.dfs.core.windows.net/demoPark/part-00000-2054a8b6-6224-4723-96b1-7ca3d59d6880-c000.snappy.parquet'\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 1
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pysparkCrtTbl')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "cpsparkpoolhvwa",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "30g",
					"driverCores": 4,
					"executorMemory": "60g",
					"executorCores": 12,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "b3598fcb-9d5f-4211-9cc5-c3be51b915f6"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/dea20f13-b8a2-4c09-9cfe-b902ec798126/resourceGroups/AZR-SYNAPSE-RG/providers/Microsoft.Synapse/workspaces/cpsynapsews/bigDataPools/cpsparkpoolhvwa",
						"name": "cpsparkpoolhvwa",
						"type": "Spark",
						"endpoint": "https://cpsynapsews.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/cpsparkpoolhvwa",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net",
							"authHeader": null
						},
						"sparkVersion": "3.2",
						"nodeCount": 3,
						"cores": 16,
						"memory": 110,
						"extraHeader": null
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "python"
							}
						},
						"source": [
							"%%pyspark\n",
							"spark.sql(\"Drop TABLE  default.demoApache \")\n",
							"spark.sql(\"CREATE TABLE default.demoApache USING Parquet LOCATION 'abfss://cpdlfilesystem@cpdlstorage.dfs.core.windows.net/demoApache/'\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 1
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LakeDatabaseTest')]",
			"type": "Microsoft.Synapse/workspaces/databases",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"Ddls": [
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "LakeDatabaseTest",
							"EntityType": "DATABASE",
							"Origin": {
								"Type": "SPARK"
							},
							"Properties": {
								"IsSyMSCDMDatabase": true
							},
							"Description": "For Test",
							"Source": {
								"Provider": "ADLS",
								"Location": "abfss://cpdlfilesystem@cpdlstorage.dfs.core.windows.net/LakeDatabaseTest",
								"Properties": {
									"FormatType": "csv",
									"LinkedServiceName": "cpsynapsews-WorkspaceDefaultStorage"
								}
							},
							"PublishStatus": "PUBLISHED",
							"ObjectVersion": 1,
							"ObjectId": "6a38b5da-93bd-480d-aae9-e8705cf3c85c"
						},
						"Source": {
							"Type": "SPARK"
						}
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/cpsparkpool')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 15
				},
				"autoScale": {
					"enabled": true,
					"maxNodeCount": 10,
					"minNodeCount": 3
				},
				"nodeCount": 0,
				"nodeSize": "Medium",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.1",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": true,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/cpsparkpoolhvwa')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 15
				},
				"autoScale": {
					"enabled": true,
					"maxNodeCount": 10,
					"minNodeCount": 3
				},
				"nodeCount": 0,
				"nodeSize": "Large",
				"nodeSizeFamily": "HardwareAcceleratedGPU",
				"sparkVersion": "3.2",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": false,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/cpsqlpool')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus"
		}
	]
}